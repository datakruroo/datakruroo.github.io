[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to Data KruRoo – a space dedicated to sharing and recording insights in data analysis, machine learning, and data visualization. Created for educators, students, and data enthusiasts alike, this blog delves into practical applications and innovative approaches to data science within the field of education.\nAuthored by a faculty member in the Educational Statistics and Data Science program at the Faculty of Education, Chulalongkorn University, Data KruRoo explores the intersections of education and data science, offering accessible resources, tutorials, and reflections on both foundational techniques and emerging trends. Whether you’re here to refine your skills in statistical analysis, gain insights into educational modeling, or discover new ways to visually interpret data, Data KruRoo aims to support your journey and foster a community around data-driven educational insights."
  },
  {
    "objectID": "posts/03_geospatial_datavis_leaflet/index.html",
    "href": "posts/03_geospatial_datavis_leaflet/index.html",
    "title": "Geospatial Data Visualization using Leaflet",
    "section": "",
    "text": "library(sf)\nlibrary(tidyverse)\nthai_prov_map &lt;- st_read(\"/Users/choat/Downloads/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm1_rtsd_20220121.shp\")\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/choat/Downloads/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm1_rtsd_20220121.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "posts/03_geospatial_datavis_leaflet/index.html#geospatial-maps-with-leaflet",
    "href": "posts/03_geospatial_datavis_leaflet/index.html#geospatial-maps-with-leaflet",
    "title": "Geospatial Data Visualization using Leaflet",
    "section": "1 Geospatial Maps with {leaflet}",
    "text": "1 Geospatial Maps with {leaflet}\n{leaflet} เป็น library ที่ถูกออกแบบมาเพื่อสร้างทัศนภาพข้อมูลเชิงพื้นที่แบบ interactive บน website โดยใช้ภาษา JavaScript และ HTML ในการสร้างแผนที่ ใน R เราสามารถใช้ {leaflet} ร่วมกับ {sf} ในบริบทของ Data Science การใช้ leaflet มีประโยชน์มากโดยเฉพาะด้านการนำเสนอหรือสื่อสารข้อมูล\n\nนำเสนอผลการวิเคราะห์/สารสนเทศที่อิงกับตำแหน่งเชิงภูมิศาสตร์\nทำความเข้าใจ attribute ร่วมกับบริบทเชิงพื้นที่ ซึ่งอาจช่วยให้ผู้ใช้ทำความเข้าใจความสัมพันธ์ระหว่างคุณลักษณะของหน่วยข้อมูลกับพื้นที่เชิงภูมิศาสตร์\nการสร้างแผนที่ที่สามารถปรับเปลี่ยนได้ตามความต้องการ ช่วยให้ผู้ใช้สามารถสำรวจจข้อมูลด้วยตนเองได้ง่าย และลดความซับซ้อนในการสื่อสารข้อมูล\n\nโครงสร้างของแผนภาพแบบ leaflet ประกอบด้วย layer ของทัศนภาพหลายชั้นซ้อนกันในทำนองเดียวกับ {ggplot2}\n\nlayer แรกกำหนดด้วยฟังก์ชัน leaflet() ซึ่งเป็น layer หลักของแผนที่ ทำนองเดียวกับ ggplot()\naddTiles() เป็น layer ที่ใช้เพิ่มแผนที่พื้นฐาน ซึ่งสามารถเลือกใช้แผนที่จาก OpenStreetMap, Stamen, Esri หรือ Mapbox ได้\nการเชื่อมต่อกันระหว่าง layer จะใช้ piping operator %&gt;%\n\nพิจารณาผลลัพธ์ที่ได้จาก syntax ด้านล่าง\n\n## install.packages(\"leaflet\")\nlibrary(leaflet)\nleaflet() %&gt;% \n  addTiles()\n\n\n\n\n\n\n1.1 Map Providers\nleaflet สามารถเลือกใช้แผนที่พื้นฐานจากหลายแหล่ง ซึ่งสามารถกำหนดได้ด้วย ้ฟังก์ชัน addProviderTiles() โดยระบุชื่อของแหล่งที่ต้องการใช้ ตัวอย่างเช่น\n\nleaflet() %&gt;% \n  addProviderTiles(provider = \"OpenStreetMap\")\n\n\n\n\nleaflet() %&gt;%\n  addProviderTiles(providers$OpenRailwayMap)\n\n\n\n\nleaflet() %&gt;% \n  addProviderTiles(providers$Esri.WorldImagery)\n\n\n\n\n\nรายการแผนที่พื้นฐานที่สามารถเลือกใช้ได้อาจเลือกดูจาก https://leaflet-extras.github.io/leaflet-providers/preview/ หรือใช้คำสั่ง\n\nleaflet::providers %&gt;% head()\n\n$OpenStreetMap\n[1] \"OpenStreetMap\"\n\n$OpenStreetMap.Mapnik\n[1] \"OpenStreetMap.Mapnik\"\n\n$OpenStreetMap.DE\n[1] \"OpenStreetMap.DE\"\n\n$OpenStreetMap.CH\n[1] \"OpenStreetMap.CH\"\n\n$OpenStreetMap.France\n[1] \"OpenStreetMap.France\"\n\n$OpenStreetMap.HOT\n[1] \"OpenStreetMap.HOT\"\n\n\n\n\n1.2 Adding Polygons in leaflet\nเราสามารถเติม geometry ของข้อมูลเชิงพื้นที่ใน leaflet ได้โดยใช้ addPolygons() ฟังก์ชันนี้จะต้องทำงานร่วมกับ {sf}\n\nmymap &lt;- leaflet() %&gt;% \n  addTiles() %&gt;% \n  addPolygons(data = thai_prov_map,\n              col = \"steelblue\",\n              label = ~ADM1_TH)\nmymap\n\n\n\n\n\n\n\n1.3 Setting View\nเราสามารถกำหนดขอบเขตของแผนที่ได้ โดยใช้ฟังก์ชัน setView() ซึ่งระบุพิกัดลองและละติจูดของจุดศูนย์กลางของแผนที่ และระดับการซูมของแผนที่ ดังตัวอย่างต่อไปนี้\n\nmymap %&gt;% \n  setView(lng = 100, lat = 15, zoom = 4)\n\nนอกจากการกำหนดตำแหน่ง เรายังสามารถจำกัดขอบเขตของแผนที่เพื่อควบคุมการซูมเข้าออกได้ด้วยการระบุพิกัดของจุดสองจุดในซ้ายล่างและขวาบนของแผนที่ โดยใช้ setMaxBounds() ดังนี้\nเราสามารถจัดกระทำส่วนชุดข้อมูลของ {sf} ก่อนการนำเสนอใน leaflet ได้เช่น ต้องการนำเสนอเฉพาะในจังหวัดเชียงใหม่\n\ncmx &lt;- thai_prov_map %&gt;% \n  filter(ADM1_TH == \"เชียงใหม่\")\ncentroid &lt;- st_centroid(st_union(cmx))\ncentroid_coords &lt;- st_coordinates(centroid)\n\ncmx_map &lt;- leaflet() %&gt;% \n  # ซูมไปยังพื้นที่เชียงใหม่\n  setView(lng = centroid_coords[1], lat = centroid_coords[2], zoom = 7) %&gt;% \n  setMaxBounds(centroid_coords[1]-0.01, centroid_coords[2]-0.01, \n               centroid_coords[1]+0.01, centroid_coords[2]+0.01) %&gt;% \n  addTiles() %&gt;% \n  addPolygons(data = thai_prov_map %&gt;%\n                filter(ADM1_TH == \"เชียงใหม่\"),\n              col = \"steelblue\",\n              label = ~ADM1_TH) %&gt;%\n  # เพิ่มพื้นหลังเฉพาะขอบเขตเชียงใหม่\n  addPolygons(\n    data = thai_prov_map %&gt;%\n                filter(ADM1_TH == \"เชียงใหม่\"),\n    fillColor = \"lightgray\",\n    color = \"blue\",\n    weight = 2,\n    opacity = 1,\n    fillOpacity = 0.2,\n    label = \"จังหวัดเชียงใหม่\"\n  ) %&gt;% \n  leafletOptions(zoomControl = FALSE)\n\ncmx_map \n\n\n\n1.4 Adding Markers\nเราสามารถเพิ่ม marker บนแผนที่ได้โดยใช้ addMarkers(), addCircle(), addCircleMarkers() หรือ addPopups()\n\nlibrary(leaflet)\n\n## สร้างชุดข้อมูลฝั่ง attribute\n\nexample_data &lt;- read_csv(\"example_data.csv\")\naggregate_data &lt;- example_data %&gt;% \n  filter(student_level == \"p6\") %&gt;% \n  group_by(province, school_lon, school_lat, school_size, hard_to_reach, school_code3) %&gt;% \n  summarise(avg_risk = mean(risk_index_df5)) %&gt;% \n  filter(province == \"เชียงใหม่\")\n\n# สร้างพาเลตสีสำหรับค่า avg_risk\nrisk_palette &lt;- colorBin(palette = \"plasma\", domain = aggregate_data$avg_risk, bins = c(0,0.6,0.8,1.0))\n\n# ตั้งค่า zoom ที่ต้องการ (ตัวอย่างใช้ระดับ zoom = 10)\nzoom_level &lt;- 7\n\nleaflet() %&gt;% \n  # ตั้งค่า zoom คงที่และระบุตำแหน่งที่ต้องการ\n  setView(lng = centroid_coords[1], lat = centroid_coords[2], zoom = zoom_level) %&gt;%\n  \n  # เพิ่มแผนที่พื้นหลังและปิดการซูมด้วย scroll wheel\n  addTiles(options = tileOptions(zoomControl = FALSE)) %&gt;%\n    addPolygons(data = thai_prov_map %&gt;%\n                filter(ADM1_TH == \"เชียงใหม่\"),\n              col = \"steelblue\") %&gt;%\n  # เพิ่ม Circle Markers\n  addCircleMarkers(\n    data = aggregate_data,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),  \n    fillOpacity = 0.8,\n    radius = 3,\n    stroke = TRUE,\n    opacity = 1,\n    popup = ~paste(\"&lt;b&gt;ระดับชั้นประถมศึกษาปีที่ 6&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2))\n  ) %&gt;%\n  addLegend(\n    \"bottomright\",\n    pal = risk_palette,\n    values = aggregate_data$avg_risk,\n    title = \"Risk Score\",\n    opacity = 1,\n    labFormat = function(type, cuts, p) {\n      labels &lt;- c(\"Low\", \"Moderate\", \"High\")  # กำหนด labels ที่ต้องการ\n    }\n  ) %&gt;% \n  addMiniMap(tiles = \"OpenStreetMap.Mapnik\",\n             zoomAnimation = T)\n\n\n\n1.5 clusterOptions\nเราสามารถกำหนดอาร์กิวเมนท์ clusterOptions = markerClusterOptions() เพื่อให้ leaflet จัดกลุ่ม marker ที่อยู่ในพื้นที่ใกล้เคียงเข้าด้วยกัน ทำให้การสำรวจทำความเข้าใจแผนที่ได้สะดวกขึ้น\n\nleaflet() %&gt;% \n  # ตั้งค่า zoom คงที่และระบุตำแหน่งที่ต้องการ\n  setView(lng = centroid_coords[1], lat = centroid_coords[2], zoom = zoom_level) %&gt;%\n  \n  # เพิ่มแผนที่พื้นหลังและปิดการซูมด้วย scroll wheel\n  addTiles(options = tileOptions(zoomControl = FALSE)) %&gt;%\n    addPolygons(data = thai_prov_map %&gt;%\n                filter(ADM1_TH == \"เชียงใหม่\"),\n              col = \"steelblue\") %&gt;%\n  # เพิ่ม Circle Markers\n  addCircleMarkers(\n    data = aggregate_data,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),  \n    fillOpacity = 0.8,\n    radius = 3,\n    stroke = TRUE,\n    opacity = 1,\n    clusterOptions = markerClusterOptions(),\n    popup = ~paste(\"&lt;b&gt;ระดับชั้นประถมศึกษาปีที่ 6&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2))\n  ) %&gt;%\n  addLegend(\n    \"bottomright\",\n    pal = risk_palette,\n    values = aggregate_data$avg_risk,\n    title = \"Risk Score\",\n    opacity = 1,\n    labFormat = function(type, cuts, p) {\n      labels &lt;- c(\"Low\", \"Moderate\", \"High\")  # กำหนด labels ที่ต้องการ\n    }\n  ) %&gt;% \n  addMiniMap(tiles = \"OpenStreetMap.Mapnik\",\n             zoomAnimation = T)\n\n\n\n1.6 Adding LayersControl\nหลายครั้งเราอาจมีข้อมูลหลายมิติที่จะต้องแสดงบนแผนที่ การนำเสนอทุกมิติพร้อมกันอาจทำให้เกิดความสับสนหรือทำความเข้าใจสารสนเทศได้ยาก ในกรณีนี้เราสามารถใช้ addLayersControl() เพื่อเพิ่มปุ่มควบคุมเพื่อเปิด-ปิด layer ต่าง ๆ ได้\n\nlibrary(leaflet)\nlibrary(akima)\nlibrary(sf)\nlibrary(terra)\nlibrary(dplyr)\n\n# 1. สร้าง grid จากข้อมูล school_lon, school_lat, avg_risk\ninterpolated &lt;- with(aggregate_data, \n                     interp(x = school_lon, y = school_lat, z = avg_risk, \n                            xo = seq(min(school_lon), max(school_lon), length = 100),\n                            yo = seq(min(school_lat), max(school_lat), length = 100),\n                            duplicate = \"mean\"\n))\n\n# 2. แปลงเป็น raster สำหรับสร้าง contour\nr &lt;- rast(interpolated)\n\n# 3. สร้าง contour lines จากข้อมูล raster\ncontours &lt;- terra::as.contour(r, levels = seq(min(values(r), na.rm = TRUE), max(values(r), na.rm = TRUE), by = 0.1))\n\n# 4. แปลง contour lines เป็น sf สำหรับการแสดงผลใน leaflet\ncontours_sf &lt;- st_as_sf(contours)\n\n# 5. สร้างเงื่อนไขเพื่อแบ่งกลุ่มตามระดับความเสี่ยง\nlow_risk &lt;- aggregate_data %&gt;% filter(avg_risk &lt; 0.6)\nmoderate_risk &lt;- aggregate_data %&gt;% filter(avg_risk &gt;= 0.6 & avg_risk &lt; 0.8)\nhigh_risk &lt;- aggregate_data %&gt;% filter(avg_risk &gt;= 0.8)\n\nsyntax ข้างต้นทำหน้าที่ สร้างข้อมูล grid ของตำแหน่งโรงเรียน (school_lon, school_lat) และค่าตัวแปร (avg_risk) โดยใช้ฟังก์ชัน interp() จากแพ็กเกจ akima (interpolate เป็นการสร้างข้อมูลใหม่จากข้อมูลที่มีอยู่โดยใช้ข้อมูลที่มีอยู่เป็นตัวแปรอ้างอิง ในลักษณะการเชื่อมต่อจุดข้อมูล)\nผลลัพธ์จากการสร้าง grid ข้างต้นทำให้นำไปใช้ในการสร้าง contour หรือ heatmap บนแผนที่ได้ใน leaflet จาก syntax จะเห็นว่ามีการสร้าง grid ขนาด 100x100 และมีขอบเขตอยู่ภายใต้ข้อมูล lattitude และ longtitude ของโรงเรียนทั้งหมดใน aggregate_data\n\ninterp() ทำหน้าที่ประมาณ coordinate บนพื้นผิวแบบ 2D โดยใช้ข้อมูลที่กำหนด\nx = school_lon, y = school_lat กำหนดข้อมูล latitude และ longitude ของโรงเรียนที่ใช้เป็นต้นแบบในการประมาณ grid\nz = avg_risk กำหนดข้อมูลที่จะใช้ประมาณ surface ของ grid\n\n\n# 6. สร้างแผนที่ leaflet และเพิ่ม contour lines\n\nleaflet() %&gt;%\n  # เพิ่มแผนที่พื้นหลัง\n  addTiles(group = \"Base Map\") %&gt;%\n  \n  # เพิ่ม Polygon ของจังหวัดเชียงใหม่\n  addPolygons(\n    data = thai_prov_map %&gt;% filter(ADM1_TH == \"เชียงใหม่\"),\n    color = \"black\",\n    fillOpacity = 0.2,\n    weight = 2,\n    label = ~ADM1_TH,\n    group = \"Chiang Mai Boundary\"\n  ) %&gt;%\n  \n  # เพิ่ม contour lines\n  addPolylines(\n    data = contours_sf,\n    color = ~risk_palette(level),\n    weight = 1.5,\n    opacity = 0.8,\n    label = ~paste(\"Risk Level:\", round(level, 2)),\n    group = \"Contour Lines\"\n  ) %&gt;%\n  \n  # เพิ่ม Circle Markers สำหรับแต่ละกลุ่มความเสี่ยง\n  addCircleMarkers(\n    data = low_risk,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),\n    opacity = 0.5,\n    radius = 3,\n    stroke = TRUE,\n    popup = ~paste(\"&lt;b&gt;ระดับความเสี่ยง: ต่ำ&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2)),\n    group = \"Low Risk School\"\n  ) %&gt;%\n  addCircleMarkers(\n    data = moderate_risk,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),\n    opacity = 0.5,\n    radius = 3,\n    stroke = TRUE,\n    popup = ~paste(\"&lt;b&gt;ระดับความเสี่ยง: ปานกลาง&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2)),\n    group = \"Moderate Risk School\"\n  ) %&gt;%\n  addCircleMarkers(\n    data = high_risk,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),\n    opacity = 0.5,\n    radius = 3,\n    stroke = TRUE,\n    popup = ~paste(\"&lt;b&gt;ระดับความเสี่ยง: สูง&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2)),\n    group = \"High Risk School\"\n  ) %&gt;%\n  \n  # เพิ่มตัวควบคุม layers สำหรับ Base Map, Contour Lines, Boundary และความเสี่ยงต่าง ๆ\n  addLayersControl(\n    baseGroups = c(\"Base Map\"),\n    overlayGroups = c(\"Chiang Mai Boundary\", \"Contour Lines\", \"Low Risk School\", \"Moderate Risk School\", \"High Risk School\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  \n  # เพิ่ม legend สำหรับระดับความเสี่ยง\n  addLegend(\n    position = \"bottomright\",\n    pal = risk_palette,\n    values = aggregate_data$avg_risk,\n    title = \"Risk Score\",\n    opacity = 1\n  ) %&gt;% \n  addLegend(\n    \"bottomright\",\n    pal = risk_palette,\n    values = aggregate_data$avg_risk,\n    title = \"Risk Score\",\n    opacity = 1,\n    labFormat = function(type, cuts, p) {\n      labels &lt;- c(\"Low\", \"Moderate\", \"High\")  # กำหนด labels ที่ต้องการ\n    }\n  ) \n\n\nrisk_palette &lt;- colorBin(palette = c(\"white\",\"orange\",\"maroon\"), domain = aggregate_data$avg_risk, bins = c(0,0.6,0.8,1.0))\n\nlow_risk &lt;- aggregate_data %&gt;% filter(avg_risk &lt; 0.6)\nmoderate_risk &lt;- aggregate_data %&gt;% filter(avg_risk &gt;= 0.6 & avg_risk &lt; 0.8)\nhigh_risk &lt;- aggregate_data %&gt;% filter(avg_risk &gt;= 0.8)\n\n\n\nleaflet() %&gt;%\n  # เพิ่มแผนที่พื้นหลัง\n  addProviderTiles(\n    provider = \"Stadia.AlidadeSmoothDark\",  \n    group = \"Base Map\") %&gt;%\n  \n  # เพิ่ม Polygon ของจังหวัดเชียงใหม่\n  addPolygons(\n    data = thai_prov_map %&gt;% filter(ADM1_TH == \"เชียงใหม่\"),\n    color = \"white\",\n    fillOpacity = 0.2,\n    weight = 2,\n    label = ~ADM1_TH,\n    group = \"Chiang Mai Boundary\"\n  ) %&gt;%\n  \n  # เพิ่ม contour lines\n  addPolylines(\n    data = contours_sf,\n    color = ~risk_palette(level),\n    weight = 1.5,\n    opacity = 0.8,\n    label = ~paste(\"Risk Level:\", round(level, 2)),\n    group = \"Contour Lines\"\n  ) %&gt;%\n  \n  # เพิ่ม Circle Markers สำหรับแต่ละกลุ่มความเสี่ยง\n  addCircleMarkers(\n    data = low_risk,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),\n    opacity = 0.5,\n    radius = 3,\n    stroke = TRUE,\n    popup = ~paste(\"&lt;b&gt;ระดับความเสี่ยง: ต่ำ&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2)),\n    group = \"Low Risk School\"\n  ) %&gt;%\n  addCircleMarkers(\n    data = moderate_risk,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),\n    opacity = 0.5,\n    radius = 3,\n    stroke = TRUE,\n    popup = ~paste(\"&lt;b&gt;ระดับความเสี่ยง: ปานกลาง&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2)),\n    group = \"Moderate Risk School\"\n  ) %&gt;%\n  addCircleMarkers(\n    data = high_risk,\n    lng = ~school_lon,\n    lat = ~school_lat,\n    color = ~risk_palette(avg_risk),\n    opacity = 0.5,\n    radius = 3,\n    stroke = TRUE,\n    popup = ~paste(\"&lt;b&gt;ระดับความเสี่ยง: สูง&lt;/b&gt;\", \"&lt;br&gt;\",\n                   \"&lt;b&gt;School =&lt;/b&gt;\", school_code3,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ขนาดโรงเรียน&lt;/b&gt; =\", school_size,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;ความยุ่งยากในการเข้าถึง&lt;/b&gt; =\", hard_to_reach,\n                   \"&lt;br&gt;\",\n                   \"&lt;b&gt;CMER Score&lt;/b&gt; =\", round(avg_risk, 2)),\n    group = \"High Risk School\"\n  ) %&gt;%\n  \n  # เพิ่มตัวควบคุม layers สำหรับ Base Map, Contour Lines, Boundary และความเสี่ยงต่าง ๆ\n  addLayersControl(\n    baseGroups = c(\"Base Map\"),\n    overlayGroups = c(\"Chiang Mai Boundary\", \"Contour Lines\", \"Low Risk School\", \"Moderate Risk School\", \"High Risk School\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  addLegend(\n    \"bottomright\",\n    pal = risk_palette,\n    values = aggregate_data$avg_risk,\n    title = \"Risk Score\",\n    opacity = 1,\n    labFormat = function(type, cuts, p) {\n      labels &lt;- c(\"Low\", \"Moderate\", \"High\")  # กำหนด labels ที่ต้องการ\n    }\n  ) \n\n\n\n1.7 กิจกรรม\nลองใช้ข้อมูลใน example_data.csv เพื่อออกแบบทัศนภาพข้อมูลเชิงพื้นที่โดยใช้ leaflet เป็นเครื่องมือ ทั้งนี้้ขอให้พิจารณาประเด็นต่อไปนี้ในการออกแบบ\n\nKey Message ของการนำเสนอคืออะไร\nเราวางแผนนำเสนอ key message นี้ในแผนภาพอย่างไร\nสร้างแผนที่ leaflet ตามแนวคิดข้างต้น"
  },
  {
    "objectID": "posts/02_geospatial_datavis_ggplot2/index.html",
    "href": "posts/02_geospatial_datavis_ggplot2/index.html",
    "title": "Geospatial Visualization using ggplot2 and sf",
    "section": "",
    "text": "บทเรียนนี้จะกล่าวถึงการสร้างทัศนภาพข้อมูลเชิงภูมิศาสตร์ (geospatial data visualization) วัตถุประสงค์หลักของบทเรียนนี้ได้แก่"
  },
  {
    "objectID": "posts/02_geospatial_datavis_ggplot2/index.html#geospatial-data-visualization-with-sf",
    "href": "posts/02_geospatial_datavis_ggplot2/index.html#geospatial-data-visualization-with-sf",
    "title": "Geospatial Visualization using ggplot2 and sf",
    "section": "1 Geospatial Data Visualization with {sf}",
    "text": "1 Geospatial Data Visualization with {sf}\n\n## install.packages(\"sf\")\nlibrary(sf)\nlibrary(tidyverse)\n\nของ R เป็น library ที่มีเครื่องมือสำหรับจัดการข้อมูลเชิงภูมิศาสตร์ โดยมีความสามารถในการจัดการข้อมูลเชิงภูมิศาสตร์ที่มีความซับซ้อน และมีการเก็บข้อมูลเชิงภูมิศาสตร์ในรูปแบบของ simple features (Pebesma 2024) ซึ่งเป็นมาตรฐานของข้อมูลเชิงภูมิศาสตร์ที่ถูกกำหนดโดย ISO 19125-1:2004\nมาตรฐานดังกล่าวกำหนดวิธีการแทนค่าและจัดเก็บข้อมูลวัตถุในโลกจริงที่มีลักษณะเชิงพื้นที่ (spatial geometry) เช่น จุด เส้น และพื้นที่ในระบบข้อมูลที่เกี่ยวกับภูมิสารสนเทศ (GIS) simple features จะประกอบด้วยสองส่วนหลัก คือ\n\nส่วนข้อมูลเชิงภูมิศาสตร์ (geometry) ที่เก็บข้อมูลเชิงพื้นที่ของวัตถุในโลกจริง เช่น จุด เส้น และพื้นที่\nส่วนข้อมูลที่เกี่ยวข้อง (attribute) ที่เก็บข้อมูลที่เกี่ยวข้องกับวัตถุในโลกจริง เช่น ชื่อ รหัส และค่าที่เกี่ยวข้อง\n\nนอกจากนี้ {sf} ยังรองรับการอ่านและเขียนไฟล์ Shapefile ซึ่งเป็นรูปแบบไฟล์ที่พัฒนาโดย ESRI สำหรับจัดเก็บข้อมูลเชิงเวกเตอร์ เช่น ข้อมูลเกี่ยวกับพิกัดและข้อมูลบรรยายที่ใช้ในระบบข้อมูลภูมิสารสนเทศ (GIS) รูปแบบ Shapefile ประกอบด้วยหลายไฟล์ เช่น .shp (เก็บข้อมูลเรขาคณิต), .shx (ดัชนีเชิงพื้นที่), และ .dbf (เก็บข้อมูลเชิงบรรยาย) ซึ่ง {sf} สามารถอ่านและแปลงเป็น sf-object เพื่อให้ใช้งานและวิเคราะห์ใน R ได้ง่ายขึ้น\nสำหรับการสร้าง Geospatial Visualization ของประเทศไทย สิ่งสำคัญที่ต้องเริ่มต้นคือการมี ไฟล์ข้อมูลภูมิสารสนเทศ ที่ใช้เป็นพื้นฐานในการสร้างแผนที่ ซึ่งไฟล์นี้จะบรรจุข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ต่าง ๆ ในประเทศไทย เช่น พิกัดของขอบเขตจังหวัดหรืออำเภอ โดยข้อมูลในไฟล์นี้จะเป็นพื้นฐานที่แสดงรูปร่างของแต่ละพื้นที่\nหลังจากมีไฟล์พื้นฐานแล้ว เราสามารถ รวบรวมข้อมูลเชิงบรรยาย (attributes) เพิ่มเติม เช่น ข้อมูลประชากร รายได้เฉลี่ย หรือความเสี่ยงต่อภัยธรรมชาติ แล้วใช้แพ็กเกจ {sf} ใน R เพื่อรวมข้อมูลเชิงบรรยายเหล่านี้เข้ากับข้อมูลพื้นที่ (spatial data) โดยการ join ตามขอบเขตพื้นที่ เช่น จังหวัดหรืออำเภอ ทำให้เราสามารถแสดงผลข้อมูลเชิงบรรยายร่วมกับแผนที่เชิงภูมิศาสตร์ได้\n\n1.1 แหล่งข้อมูลภูมิสารสนเทศของประเทศไทย\n\nOCHA Services\nGADM\nสำนักงานทรัพยากรน้ำแห่งชาติ\n\n\n\n1.2 นำเข้า shapefile\nเราสามารถนำเข้าไฟล์ข้อมูลภูมิสารสนเทศ (shapefile) ด้วยคำสั่ง st_read() ของ {sf} โดยระบุที่อยู่ของไฟล์ shapefile ที่ต้องการนำเข้า ดังตัวอย่างต่อไปนี้\n\nthai_prov_map &lt;- st_read(\"/Users/choat/Downloads/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm1_rtsd_20220121.shp\")\n\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/choat/Downloads/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm1_rtsd_20220121.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n\n\nทดลองเรียกตัวอย่างข้อมูลขึ้นมาดู\n\nhead(thai_prov_map)\n\nSimple feature collection with 6 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 100.1913 ymin: 13.47842 xmax: 100.9639 ymax: 14.80246\nGeodetic CRS:  WGS 84\n  Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1   2.417227 0.13133873                  Bangkok  กรุงเทพมหานคร       TH10\n2   1.695100 0.07926199             Samut Prakan    สมุทรปราการ       TH11\n3   1.251111 0.05323766               Nonthaburi         นนทบุรี       TH12\n4   1.884945 0.12698345             Pathum Thani        ปทุมธานี       TH13\n5   3.041716 0.21393797 Phra Nakhon Si Ayutthaya พระนครศรีอยุธยา       TH14\n6   1.739908 0.07920961                Ang Thong        อ่างทอง       TH15\n  ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1     &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย\n2     &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย\n3     &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย\n4     &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย\n5     &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย\n6     &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; Thailand ประเทศไทย\n  ADM0_PCODE       date    validOn validTo                       geometry\n1         TH 2019-02-18 2022-01-22    &lt;NA&gt; MULTIPOLYGON (((100.6139 13...\n2         TH 2019-02-18 2022-01-22    &lt;NA&gt; MULTIPOLYGON (((100.7306 13...\n3         TH 2019-02-18 2022-01-22    &lt;NA&gt; MULTIPOLYGON (((100.3415 14...\n4         TH 2019-02-18 2022-01-22    &lt;NA&gt; MULTIPOLYGON (((100.8916 14...\n5         TH 2019-02-18 2022-01-22    &lt;NA&gt; MULTIPOLYGON (((100.5131 14...\n6         TH 2019-02-18 2022-01-22    &lt;NA&gt; MULTIPOLYGON (((100.3332 14...\n\n\nสังเกตว่าชุดข้อมูล sf มีส่วนประกอบสองส่วนดังที่กล่าวไว้ ส่วนแรกที่เป็นข้อมูลเชิงพื้นที่จะอยู่ในคอลัมน์ geometry ซึ่งเก็บข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ต่าง ๆ ในประเทศไทย ส่วนที่สองคือข้อมูลเชิงบรรยายที่เกี่ยวข้องกับพื้นที่นั้น ๆ จะอยู่ในคอลัมน์อื่น ๆ ที่ไม่ใช่ geometry ซึ่งเก็บข้อมูลที่เกี่ยวข้องกับพื้นที่นั้น ๆ เช่น ชื่อ รหัส และค่าที่เกี่ยวข้อง\nชุดข้อมูลข้างต้นเมื่อพิจารณาส่วน geometry จะเห็นว่ามีการกำกับไว้ว่าเป็น MULTIPOLYGON ซึ่งเป็นรูปแบบของเรขาคณิตเชิงพื้นที่ประเภทหนึ่งที่มีพื้นที่ย่อยหลาย ๆ พื้นที่ีรวมกัน เราสามารถนำข้อมูลส่วนนี้มาสร้างทัศนภาพข้อมูลได้เลยดังนี้\n\n### plot(thai_prov_map)\nplot(thai_prov_map[\"Shape_Area\"])\n\n\n\n\n\n\n\n\n\n\n1.3 {ggplot2} with {sf}\nเราสามารถใช้ ggplot2 กับ object ประเภท {sf} ได้โดยใช้ geom_sf() ซึ่งเป็น geom ที่ใช้สำหรับพล็อตข้อมูลเชิงภูมิศาสตร์ ดังตัวอย่างต่อไปนี้\n\np1 &lt;- thai_prov_map %&gt;% \n  ggplot() + \n  geom_sf(aes(geometry = geometry, fill = Shape_Area))\np1\n\n\n\n\n\n\n\n\n\n\n1.4 Coordinate Reference System\nCoordinate Reference System (CRS) เป็นระบบพิกัดที่ใช้ในการกำหนดตำแหน่งของวัตถุในโลกจริงแบบ 3D ให้อยู่บนแผนที่ ระบบ CRS มีหลายรูปแบบขึ้นอยู่กับการใช้งาน เช่น\n\nWGS84 (World Geodetic System 1984: EPSG:4326) เป็นระบบพิกัดที่ใช้กันทั่วไปน่าจะแพร่หลายที่สุดในโลกระบบหนึ่งอยู่ในกลุ่ม geographic coordinate system (GCS) ลักษณะเด่นคือการระบุตำแหน่งต่าง ๆ หรือรูปทรงเรขาคณิตบนโลกผ่านพิกัดลองจิจูด (latitude) และละติจูด (longitude) เป็นระบบที่ง่ายแต่อาจไม่ได้มีความแม่นยำสูงมาก\nNAD83 (EPSG:4269) คล้าย WGS84 แต่มีการปรับปรุงความแม่นยำในการฉายภาพให้ตรงกับสภาพของทวีปอเมริกาเหนือมากขึ้น\nWeb Mercator (EPSG:3857) เป็นระบบพิกัดประเภท projected coordinate system (PCS) เน้นใช้แสดงผลบน website เช่น google map, openstreetmap ลักษณะเด่นคือมีการแปลงพิกัดบนทรงกลม (โลก) ให้เป็นพื้นราบ 2D โดยใช้ mercator projection วิธีการนี้มีแนวโน้มบิดเบือนพื้นที่บริเวณขั้วโลกให้ดูใหญ่กว่าความเป็นจริง\nUTM (Universal Transverse Mercator) เป็นระบบพิกัดที่ใช้ในการแสดงผลบนแผนที่ที่มีความแม่นยำสูง โดยแบ่งโลกออกเป็น 60 โซนตามแนวตั้ง แต่ละโซนมีความกว้าง 6 องศา และมีระบบพิกัดของตัวเอง การแปลงพิกัดบนทรงกลม (โลก) ให้เป็นพื้นราบ 2D โดยใช้ Transverse Mercator projection พิกัดนี้เหมาะกับการทำแผนที่พื้นที่ขนาดเล็ก\n\nใน R เราสามารถตรวจสอบ CRS ของข้อมูลเชิงภูมิศาสตร์ได้ด้วยคำสั่ง st_crs() และเปลี่ยน CRS ด้วยคำสั่ง st_transform() ดังตัวอย่างต่อไปนี้\n\nst_crs(thai_prov_map)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\nlibrary(patchwork)\np2 &lt;- thai_prov_map %&gt;% \n  st_transform(crs = 3857) %&gt;%\n  ggplot()+\n  geom_sf(aes(geometry = geometry, fill = Shape_Area))+\n  ggtitle(\"EPSG:3857\")\n\np3 &lt;- thai_prov_map %&gt;% \n  st_transform(crs = 32647 ) %&gt;% \n  ggplot()+\n  geom_sf(aes(geometry = geometry, fill = Shape_Area))+\n  ggtitle(\"EPSG:32647\")\n\np1+p2+p3\n\n\n\n\n\n\n\n\n\n\n1.5 Geometry\nข้อมูลเชิงพื้นที่ที่อยู่ในรูปของ geometry ใน sf มีหลายประเภท ซึ่งแต่ละประเภทจะเก็บข้อมูลเรขาคณิตเชิงพื้นที่ของวัตถุในโลกจริงในรูปแบบที่แตกต่างกัน ประเภทข้อมูลหลัก ๆ เช่น\n\nPOINT เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของจุดบนแผนที่ ซึ่งมีค่าพิกัดลองและละติจูด\nLINESTRING เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของเส้นที่เชื่อมต่อจุดหลาย ๆ จุดเข้าด้วยกัน\nPOLYGON เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ที่มีขอบเขตเป็นเส้นต่อเนื่อง ๆ ที่ปิดรูป\nMULTIPOLYGON เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ที่มีขอบเขตเป็นเส้นต่อเนื่อง ๆ ที่ปิดรูป แต่มีพื้นที่ย่อยหลาย ๆ พื้นที่รวมกัน\n\nในแผนภาพหนึ่ง ๆ อาจจะต้องใช้ geometry หลายประเภทเพื่อนำเสนอข้อมูลเชิงพื้นที่หลากหลายลักษณะขึ้นอยู่งาน\n\n\n1.6 Attributes\nAttribute เป็นข้อมูลคุณลักษณะของวัตถุเชิงพื้นที่ใช้บรรยายสภาพหรือบริบทของวัตถุนั้น ๆ ในโลกจริง ใน {sf} จะเก็บ attribute ดังกล่าวในรูปแบบตารางเหมือนกับ data.frame แต่จะมีความเชื่อมโยงกับข้อมูลเชิงพื้นที่ในคอลัมน์ geometry พิจารณาชุดข้อมูล thai_prov_map ที่เราได้นำเข้ามาก่อนหน้านี้ จะเห็นว่ามีตัวแปรคุณลักษณะหลายตัวที่นำเข้ามาพร้อมกัน\n\nglimpse(thai_prov_map)\n\nRows: 77\nColumns: 17\n$ Shape_Leng &lt;dbl&gt; 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area &lt;dbl&gt; 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    &lt;chr&gt; \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    &lt;chr&gt; \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE &lt;chr&gt; \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    &lt;chr&gt; \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    &lt;chr&gt; \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE &lt;chr&gt; \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       &lt;date&gt; 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    &lt;date&gt; 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    &lt;date&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON (…\n\n\nผลลัพธ์ข้างต้นจะเห็นว่า\n\nชุดข้อมูลมี 77 แถว (ตามจำนวนจังหวัด) และมี 17 คอลัมน์\nคอลัมน์ geometry เก็บข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ต่าง ๆ ในประเทศไทย\nคอลัมน์ที่เหลือเป็นข้อมูลพื้นฐานที่เกี่ยวข้องของแต่ละจังหวัด เช่น ความยาว ขนาดพื้นที่ ชื่อ รหัส …\n\n\n\n1.7 {sf} with {tidyverse}\nเนื่องจาก {sf} ถูกออกแบบให้มีลักษณะเป็นชุดข้อมูลแบบ data.frame ดังนั้นจึงสามารถทำงานภายใต้ tidyverse ได้โดยตรง ซึ่งเป็นข้อได้เปรียบที่สำคัญที่ทำให้สามารถใช้ {sf} ในการจัดการข้อมูลเชิงภูมิศาสตร์ได้ง่ายขึ้น เบื้องต้นเราสามารถใช้ {dplyr} หรือ {tidyr} รวมทั้ง {ggplot2} (แสดงให้ดูไปแล้ว) เพื่อจัดกระทำและสร้างทัศนภาพข้อมูลเชิงพื้นที่ตามที่ต้องการได้ เช่น\n\n1.7.1 การคัดเลือกตัวแปร\n\nthai_prov_map %&gt;% \n  select(ADM1_TH, Shape_Area) %&gt;% \n  head()\n\nSimple feature collection with 6 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 100.1913 ymin: 13.47842 xmax: 100.9639 ymax: 14.80246\nGeodetic CRS:  WGS 84\n        ADM1_TH Shape_Area                       geometry\n1  กรุงเทพมหานคร 0.13133873 MULTIPOLYGON (((100.6139 13...\n2    สมุทรปราการ 0.07926199 MULTIPOLYGON (((100.7306 13...\n3         นนทบุรี 0.05323766 MULTIPOLYGON (((100.3415 14...\n4        ปทุมธานี 0.12698345 MULTIPOLYGON (((100.8916 14...\n5 พระนครศรีอยุธยา 0.21393797 MULTIPOLYGON (((100.5131 14...\n6        อ่างทอง 0.07920961 MULTIPOLYGON (((100.3332 14...\n\n\nผลลัพธ์ข้างต้นเราจะเห็นว่า geometry จะติดมากับ attribute ที่เราเลือกไว้ด้วยเสมอ\n\n\n1.7.2 การคัดกรองข้อมูล\n\np4 &lt;- thai_prov_map %&gt;% \n  filter(ADM1_TH == \"กรุงเทพมหานคร\") %&gt;% \n  ggplot()+\n  geom_sf(fill = \"steelblue\")+\n  theme_void()+\n  ggtitle(\"Bangkok\")\n\np4\n\n\n\n\n\n\n\n\n\n\n1.7.3 การ join ข้อมูล\nโดยปกติเราสามารถเข้าถึงข้อมูลเชิงพื้นที่ที่จะใช้สำหรับสร้างแผนที่ที่ต้องการได้ไม่ยาก ปัญหาหลักคือเราต้องการชุดข้อมูลเชิงพื้นที่ที่ประกอบด้วย attribute เป้าหมายที่จะใช้นำเสนอซึ่งชุดข้อมูลลักษณะนี้ผู้วิเคราะห์จำเป็นต้องสร้างเอง ยกตัวอย่างเช่น\n\nค่าใช้จ่ายเฉลี่ยต่อเดือนของครัวเรือนรายจังหวัด\n\n\nlibrary(readxl)\ndata_expense &lt;- read_excel(\"average_expense.xlsx\", sheet = 1, skip = 2)\nhead(data_expense, 10)\n\n# A tibble: 10 × 14\n   ภาค    `จังหวัด` `2555` `2556` `2557` `2558` `2559` `2560` `2561` `2562` `2563`\n   &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 ทั่วราช… ทั่วราชอ… 18766  19061  20892. 21157  21144. 21436. 21346. 20742. 21329.\n 2 กรุงเท… กรุงเทพ… 31971. 32425  31606. 30882  32091. 33126. 33408. 30778. 31142.\n 3 &lt;NA&gt;   กรุงเทพ… 33957. 35024. 34426. 33086. 35101. 35351. 34127. 31753. 32052.\n 4 &lt;NA&gt;   สมุทรปร… 25861. 26193. 22747. 22332. 24354. 24355. 23232. 21423. 23851.\n 5 &lt;NA&gt;   นนทบุรี   28731. 26947. 30812. 31381  28828. 33313. 33809. 32189. 33042.\n 6 &lt;NA&gt;   ปทุมธานี  30669. 29514  30197. 29770  31271. 33604. 43301. 37086. 33824.\n 7 ภาคกล… ภาคกลาง 19762  19728  21144. 21055  20493. 21120. 21168. 20645. 21771.\n 8 &lt;NA&gt;   พระนคร… 25216. 20494. 20410. 22218. 23095. 23780. 22790. 24440. 23391.\n 9 &lt;NA&gt;   อ่างทอง  21273. 21182. 19634. 17574. 20372. 17162. 17295. 17011. 17727.\n10 &lt;NA&gt;   ลพบุรี    17357. 15945. 14911. 17969. 15876. 16012. 17017. 16830. 19180.\n# ℹ 3 more variables: `2564` &lt;dbl&gt;, `2565` &lt;dbl&gt;, `2566` &lt;dbl&gt;\n\n\nสมมุติว่าวัตถุประสงค์คือการ plot รายจ่ายโดยเฉลี่ยของครัวเรือนในแต่ะละจังหวัด เราจำเป็นที่จะต้องเชื่อมโยงข้อมูลรายจ่ายดังกล่าวเข้ากับข้อมูลเชิงพื้นที่ใน thai_prov_map อย่างไรก็ตามหากใช้การรวมข้อมูลด้วย dplyr แบบปกติจะทำให้สูญเสีย class ของข้อมูลเดิมคือ sf ไป การแก้ปัญหาดังกล่าวสามารถทำได้โดยใช้ st_as_sf() ในการแปลงข้อมูลเชิงพื้นที่ที่เราได้รวมข้อมูลเชิงบรรยายเข้าไปกลับเป็น sf อีกครั้ง\n\ndata_expense %&gt;% \n  rename(region = 1,\n         prov = 2,\n         year2566 = `2566`) %&gt;% \n  select(region, prov, year2566) %&gt;% \n  fill(region, .direction = \"down\") %&gt;% \n  right_join(thai_prov_map, \n             by = join_by(\"prov\" == \"ADM1_TH\")) %&gt;% \n  st_as_sf() %&gt;% \n  ggplot()+\n  geom_sf(aes(fill = year2566))+\n  scale_fill_gradient2(low = \"maroon\", \n                       mid = \"white\",\n                       high = \"steelblue\", \n                       midpoint = 20000)+\n  theme_light()\n\n\n\n\n\n\n\n\n\n\n1.7.4 group_by() และ summarise()\nทำนองเดียวกับการจัดกระทำข้อมูลทั่วไป เราสามารถใช้ group_by() และ summarise() ในการสรุปข้อมูลเชิงพื้นที่ได้เช่นกัน\n\nexpense_st_joined &lt;- data_expense %&gt;% \n  rename(region = 1,\n         prov = 2,\n         year2566 = `2566`) %&gt;% \n  select(region, prov, year2566) %&gt;% \n  fill(region, .direction = \"down\") %&gt;% \n  right_join(thai_prov_map, \n             by = join_by(\"prov\" == \"ADM1_TH\")) %&gt;% \n  st_as_sf()\n\n\nexpense_st_joined %&gt;% \n  group_by(region) %&gt;% \n  summarise(avg_expense = mean(year2566)) %&gt;% \n  ggplot()+\n  geom_sf(aes(fill = avg_expense))+\n  scale_fill_gradient2(low = \"maroon\", \n                       mid = \"white\",\n                       high = \"steelblue\", \n                       midpoint = 20000)+\n  theme_bw()+\n  ggtitle(\"Average Expense by Region\")\n\n\n\n\n\n\n\n\nจะเห็นว่าการใช้ grammar of data maniputation ร่วมกับ {sf} ทำให้เราสามารถจัดการข้อมูลเชิงพื้นที่ได้อย่างมีประสิทธิภาพ สามารถนำเสนอมิติต่าง ๆ ของข้อมูลได้โดยง่าย\n\n\n\n1.8 Geometry Operations\n\nst_distance() ใช้คำนวณระยะห่างระหว่าง geometry สองตัว\nst_union() ใช้รวม geometry หลายตัวเข้าด้วยกัน\nst_centroid() ใช้หาจุดศูนย์กลางของ geometry\n\nst_intersects(), st_disjoint(), st_touches(), st_crosses(), st_within(), st_contains(), st_overlaps(), st_equals(), st_covers(), st_covered_by(), st_equals_exact() and st_is_within_distance() รายละเอียดถ้าจำเป็นต้องใช้สามารถศึกษาได้จาก (Pebesma 2024)\n\nx &lt;- thai_prov_map %&gt;% filter(ADM1_TH %in% c(\"กรุงเทพมหานคร\",\"ยะลา\",\"เชียงใหม่\"))\ny &lt;- thai_prov_map %&gt;% filter(ADM1_TH == \"นครราชสีมา\")\nst_distance(x,y)\n\nUnits: [m]\n          [,1]\n[1,]  68260.06\n[2,] 370023.01\n[3,] 834005.26\n\nst_distance(x,y) %&gt;% units::set_units(km)\n\nUnits: [km]\n          [,1]\n[1,]  68.26006\n[2,] 370.02301\n[3,] 834.00526\n\n\n\n\n1.9 กิจกรรม\nขอให้ผู้เรียนลองสร้างทัศนภาพข้อมูลพื้นที่เสี่ยงภัยของประเทศดังรูป\n\n\noptions:        ENCODING=WINDOWS-874 \nReading layer `All_Thai_AB_161061' from data source \n  `/Users/choat/Downloads/5.พื้นที่เป้าหมาย (Area Based)/All_Thai_AB_161061.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 66 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 418132 ymin: 637937.4 xmax: 1190131 ymax: 2263222\nProjected CRS: WGS 84 / UTM zone 47N\n\n\n\n\n\n\n\n\n\nชุดข้อมูลที่เกี่ยวข้อง\n\nพื้นที่เป้าหมาย\nOCHA Services"
  },
  {
    "objectID": "posts/01_missingvalue/index.html",
    "href": "posts/01_missingvalue/index.html",
    "title": "What is Missing Values?",
    "section": "",
    "text": "เนื้อหาส่วนนี้จะกล่าวถึงมโนทัศน์เกี่ยวกับค่าสูญหาย (Missing Values) ซึ่งเป็นปัญหาทั่วไปที่ผู้วิเคราะห์สามารถพบได้ในการวิจัยหรือโครงการด้านข้อมูล อย่างไรก็ตามปัญหาทั่วไปนี้อาจส่งผลกระทบเชิงลบต่อการวิเคราะห์ข้อมูล ร้ายแรงที่สุดคือทำให้ผลการวิเคราะห์หรือสารสนเทศที่ได้รับจากการวิเคราะห์มีความลำเอียงคลาดเคลื่อนไปจากความเป็นจริง ซึ่งนำไปสู่การตัดสินใจที่ผิดพลาด ดังนั้นการทำความเข้าใจและการจัดการค่าสูญหายอย่างเหมาะสมจึงเป็นมโนทัศน์และทักษะสำคัญสำหรับนักวิเคราะห์ข้อมูลทุกคน"
  },
  {
    "objectID": "posts/01_missingvalue/index.html#คาสญหายคออะไร",
    "href": "posts/01_missingvalue/index.html#คาสญหายคออะไร",
    "title": "What is Missing Values?",
    "section": "ค่าสูญหายคืออะไร",
    "text": "ค่าสูญหายคืออะไร\nค่าสูญหาย (missing values) หรือข้อมูลสูญหาย (missing data) เป็นปัญหาในการวิเคราะห์ข้อมูลที่เกิดขึ้นเมื่อมีข้อมูลของตัวแปรบางตัวของหน่วยข้อมูลบางหน่วยขาดหายไปหรือไม่สามารถวัด/สังเกตค่าได้\nค่าสูญหาย (missing values) เป็นปัญหาที่พบได้ทั่วไปทั้งในการวิจัย หลายกรณีที่ค่าสูญหายส่งผลกระทบเชิงลบต่อผลการวิเคราะห์ ทำให้ผลการวิเคราะห์ที่ได้เช่น ผลการประมาณค่าพารามิเตอร์ การทดสอบสมมุติฐาน ช่วงความเชื่อมั่น หรือค่าทำนายมีแนวโน้มคลาดเคลื่อนไปจากความเป็นจริง ดังนั้นการจัดการกับข้อมูลสูญหายอย่างเหมาะสมจึงเป็นสิ่งจำเป็นในการวิเคราะห์ข้อมูล ทั้งนี้เพื่อรับประกันว่าผลการวิเคราะห์ที่ได้จะปราศจากหรือมีความลำเอียงน้อยที่สุด"
  },
  {
    "objectID": "posts/01_missingvalue/index.html#สาเหตการสญหายของขอมล",
    "href": "posts/01_missingvalue/index.html#สาเหตการสญหายของขอมล",
    "title": "What is Missing Values?",
    "section": "สาเหตุการสูญหายของข้อมูล",
    "text": "สาเหตุการสูญหายของข้อมูล\nสาเหตุการสูญหายของข้อมูลเป็นไปได้อย่างหลากหลาย ทั้งการจงใจหรือลืมที่จะให้ข้อมูลของกลุ่มเป้าหมาย ความผิดพลาดในการบันทึกข้อมูล อุปสรรคอื่น ๆ ในการให้ข้อมูล ไปจนถึงการออกแบบการเก็บรวบรวมและจัดกระทำข้อมูล อย่างไรก็ตามไม่ว่าสาเหตุจะเป็นอะไรอาจจัดกลุ่มสาเหตุดังกล่าวได้เป็น 3 ด้านคือ สาเหตุด้านผู้ให้ข้อมูล ด้านเครื่องมือที่ใช้วัดค่าสังเกตหรือเก็บรวบรวมข้อมูล และด้านการเก็บรวบรวมและการจัดกระทำข้อมูลของผู้วิจัย/ผู้วิเคราะห์\n\n1. สาเหตุจากผู้ให้ข้อมูลหรือวิธีการวัดค่าสังเกต\nการสูญหายจากสาเหตุประเภทนี้เกิดจากผู้ให้ข้อมูลไม่ได้ตอบหรือให้ข้อมูลที่ผู้วิเคราะห์วางแผนจะเก็บรวบรวมไว้อย่างครบถ้วน ซึ่งอาจเกิดจากผู้ให้ข้อมูลลืมในการตอบคำถามบางข้อ หรือตั้งใจที่จะไม่ให้ข้อมูลเพราะอาจไม่มีความรู้/ไม่แน่ใจในคำตอบ ไม่สนใจที่จะให้ข้อมูล หรืออาจมีความไม่สะดวกในการให้ข้อมูล\nซึ่งเป็นไปได้หลากหลายลักษณะ เช่น ในการวิจัยเชิงสำรวจที่มีการเก็บรวบรวมข้อมูลด้วยแบบสอบถามหรือแบบวัด มีความเป็นไปได้ที่ผู้ตอบอาจลืมตอบคำถามในบางข้อ หรือเลือกที่จะไม่ตอบเพราะไม่มีความรู้ หรือไม่สนใจที่จะให้ข้อมูล หรืออาจมีความสะดวกในการตอบคำถาม ปัจจัยดังกล่าวล้วนเป็นสาเหตุที่ทำให้เกิดค่าสูญหายทั้งสิ้น\nอีกลักษณะหนึ่งคือการขาดหายไปจากการที่หน่วยข้อมูลบางหน่วยไม่ได้เข้าร่วมกิจกรรมที่กำหนดไว้สำหรับการเก็บรวบรวมข้อมูล เช่น การออกแบบการเก็บรวบรวมข้อมูลในชั้นเรียน หรือเป็นการบ้านให้กับนักเรียน แต่อาจมีนักเรียนบางคนที่ไม่ได้เข้าเรียนในวันดังกล่าว หรือไม่ส่งการบ้าน สถานการณ์ดังกล่าวทำให้เกิดค่าสูญหายได้เช่นเดียวกัน\nความผิดพลาดของอุปกรณ์วัดก็เป็นปัจจัยในด้านนี้ด้วย เช่น ผู้วิจัยอาจเลือกใช้ smart watch เป็นเครื่องมือในการวัดชีพจร และตัวชี้วัดทางกายภาพของผู้เรียนระหว่างการจัดการเรียนรู้ อาจมีความเป็นไปได้ที่ผู้เรียนบางคนไม่ได้ใส่อุปกรณ์อย่างถูกต้อง หรืออุปกรณ์ทำงานผิดพลาดจากสาเหตุอื่น ๆ ทำให้ไม่สามารถเก็บรวบรวมข้อมูลได้อย่างครบถ้วน\nการสูญหายที่เกี่ยวข้องในประเด็นนี้อาจเกิดจากอุปสรรคในการเข้าถึงสื่อหรือเครื่องมือที่การเก็บรวบรวมข้อมูลด้วย เช่น ผู้วิเคราะห์อาจออกแบบการเก็บรวบรวมข้อมูลโดยใช้การตอบแบบสอบถามบน google form หรือ application อื่นที่ต้องใช้อุปกรณ์คอมพิวเตอร์หรือ smart device ในการเข้าถึง แต่หากช่วงเวลาที่ดำเนินการเก็บรวบรวมข้อมูล หน่วยข้อมูลไม่มีอุปกรณ์หรือ internet หรือมีอุปสรรคที่ไม่สามารถเข้าถึงแบบสอบถามดังกล่าวได้ ก็อาจเป็นสาเหตุที่ทำให้เกิดค่าสูญหายได้เช่นเดียวกัน\n2. สาเหตุจากการยุบรวมข้อมูลจากแหล่งข้อมูลที่หลากหลาย การวิเคราะห์ข้อมูลโดยเฉพาะในโครงการที่ใช้ฐานข้อมูลทุติยภูมิในปัจจุบัน มักจะต้องมีการเชื่อมโยงหรือรวมข้อมูลระหว่างฐาน ทั้งการเชื่อมโยงตามแนวคอลัมน์เพื่อให้ได้ข้อมูลคุณลักษณะหรือตัวแปรของหน่วยข้อมูลที่มีความสมบูรณ์ หรือการเชื่อมโยงตามแนวแถวเพื่อให้ได้หน่วยข้อมูลที่ครอบคลุมหรือเป็นตัวแทนของกลุ่มเป้าหมาย อย่างไรก็ตามการเชื่อมโยงข้อมูลจากหลายฐานข้อมูลมีโอกาสที่จะเกิดค่าสูญหายอันเนื่องมาจากรูปแบบหรือระบบบันทึกเก็บข้อมูลระหว่างฐานที่แตกต่างกัน เช่น\nความแตกต่างในรูปแบบของรหัสที่จะใช้เชื่อมโยง กล่าวคือในฐานข้อมูลหนึ่งอาจะใช้รูปแบบรหัสบ่งชี้หน่วยข้อมูลเป็นรูปแบบหนึ่ง แต่อีกฐานข้อมูลหนึ่งใช้อีกรูปแบบหนึ่ง ลักษณะนี้ทำให้การเชื่อมโยงข้อมูลจากฐานข้อมูลทั้งสองไม่สามารถทำได้จากรหัสบ่งชี้หน่วยข้อมูล แต่จะต้องเลี่ยงไปใช้ข้อมูลของตัวแปรอื่น ๆ เข้ามาช่วย ซึ่งอาจทำให้ไม่สามารถเชื่อมโยงข้อมูลทั้งสองฐานได้อย่างสมบูรณ์\nรูปแบบการจัดเก็บข้อมูลที่แตกต่างกัน เช่น ฐานข้อมูลหนึ่งบันทึกวันที่ในรูปแบบ DD/MM/YYYY แต่อีกฐานหนึ่งอาจบันทึกในรูปแบบ MM/DD/YYYY หากมีการใช้ข้อมูลวันที่เป็นตัวแปรหนึ่งที่เชื่อมโยงฐานข้อมูลเข้ากัน จะทำให้ผลลัพธ์ที่ได้เป็นค่าสูญหาย เพราะไม่สามารถเชื่อมโยงฐานทั้งสองเข้าด้วยกันได้\nความไม่สอดคล้องของข้อมูลในตัวแปรเดียวกัน เช่น ฐานข้อมูลด้านการศึกษาหนึ่งอาจบันทึกสถานะของนักเรียนเป็น “จบการศึกษา” หรือ “ยังศึกษาอยู่” ขณะที่อีกฐานข้อมูลอาจใช้คำว่า “สำเร็จการศึกษา” หรือ “ลงทะเบียนเรียน” ความแตกต่างในคำอธิบายเหล่านี้อาจทำให้เกิดความสับสนหรือข้อมูลสูญหายเมื่อต้องเชื่อมโยงกัน ซึ่งอาจทำให้ผลลัพธ์ที่ได้มีการตัดค่าที่เป็นปัญหานี้ออกไปเกิดเป็นค่าสูญหาย\nการขาดข้อมูลในฐานข้อมูลบางส่วน อาจเกิดขึ้นโดยเฉพาะในการรวมข้อมูลตามแถว กล่าวคือ ฐานข้อมูลหนึ่งอาจมีข้อมูลของโรงเรียนที่สังกัดเขตพื้นที่หนึ่งในด้านต่าง ๆ อย่างครบถ้วน แต่เมื่อเชื่อมโยงฐานข้อมูลนี้กับเขตพื้นที่อื่นที่อาจมีข้อมูลไม่สมบูรณ์ในบางตัวแปร ผลลัพธ์ที่ได้จะได้ชุดข้อมูลที่มีค่าสูญหายในตัวแปรดังกล่าว\n3. การเก็บรวบรวมข้อมูลระยะยาว การเก็บรวบรวมข้อมูลระยะยาวที่ต้องเก็บข้อมูลจากหน่วยข้อมูลเดียวกันหลาย ๆ ครั้ง หากระหว่างทางมีหน่วยข้อมูลออกจากระบบ เช่น ผู้ตอบแบบสอบถามหรือผู้เข้าร่วมการศึกษาไม่สามารถเข้าร่วมการเก็บข้อมูลในช่วงใดช่วงหนึ่งได้ อาจเป็นเพราะย้ายถิ่นฐาน, เปลี่ยนสถานะ, หรือเลิกเข้าร่วมการศึกษา สิ่งนี้จะทำให้เกิดการสูญหายของข้อมูลในช่วงเวลานั้นได้ ข้อมูลขาดหายตามเวลา (attrition) เป็นปัญหาสำคัญในงานวิจัยระยะยาว เพราะอาจทำให้ความต่อเนื่องของข้อมูลไม่สมบูรณ์ และทำให้ผลลัพธ์ที่ได้จากการวิเคราะห์ไม่สะท้อนความเป็นจริงทั้งหมดของหน่วยข้อมูลที่ตั้งใจศึกษา\nนอกจากนี้หากการออกกลางคันของผู้ให้ข้อมูลนี้เกิดขึ้นอย่างเป็นระบบ เช่น ผู้เข้าร่วมจากกลุ่มใดกลุ่มหนึ่งออกจากระบบมากกว่ากลุ่มอื่น อาจทำให้เกิดอคติในผลการวิเคราะห์ (attrition bias) ซึ่งจำเป็นที่จะต้องได้รับการจัดการก่อนเพื่อปรับปรุงผลการวิเคราะห์ให้มีความแม่นยำ และน่าเชื่อถือมากขึ้น"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "KruRoo Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nGeospatial Data Visualization using Leaflet\n\n\n\ndata visualization\n\n\ngeospatial\n\n\nsf\n\n\nleaflet\n\n\n\n\n\n\n\nSiwachoat Srisuttiyakorn\n\n\nNov 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nGeospatial Visualization using ggplot2 and sf\n\n\n\ndata visualization\n\n\ngeospatial\n\n\nggplot2\n\n\nsf\n\n\nleaflet\n\n\n\n\n\n\n\nSiwachoat Srisuttiyakorn\n\n\nNov 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nWhat is Missing Values?\n\n\n\nmissing values\n\n\ndata preprocessing\n\n\ndata cleaning\n\n\n\n\n\n\n\nSiwachoat Srisuttiyakorn\n\n\nOct 28, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  }
]