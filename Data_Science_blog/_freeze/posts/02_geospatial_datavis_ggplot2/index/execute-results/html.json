{
  "hash": "cfbf1a55ca51175868774e3684de1ff6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Geospatial Visualization using ggplot2 and sf\"\nauthor: \"Siwachoat Srisuttiyakorn\"\ndate: \"2024-11-01\"\ncategories: [data visualization, geospatial, ggplot2, sf, leaflet]\nmessage: false\nwarning: false\ntoc: true\nnumber-sections: true\nbibliography: reference.bib\n---\n\n\n\nบทเรียนนี้จะกล่าวถึงการสร้างทัศนภาพข้อมูลเชิงภูมิศาสตร์ (geospatial data visualization) วัตถุประสงค์หลักของบทเรียนนี้ได้แก่\n\n-   เข้าใจและสามารถใช้ `{sf}` สำหรับจัดการและวิเคราะห์ข้อมูลเชิงภูมิศาสตร์\n\n-   สร้าง geospatial data visualization ผ่าน `{ggplot2}`\n\n-   สร้าง interactive mapping ด้วย `{leaflet}`\n\n## Geospatial Data Visualization with `{sf}`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## install.packages(\"sf\")\nlibrary(sf)\nlibrary(tidyverse)\n```\n:::\n\n\n\nของ R เป็น library ที่มีเครื่องมือสำหรับจัดการข้อมูลเชิงภูมิศาสตร์ โดยมีความสามารถในการจัดการข้อมูลเชิงภูมิศาสตร์ที่มีความซับซ้อน และมีการเก็บข้อมูลเชิงภูมิศาสตร์ในรูปแบบของ simple features [@Pebesma_sf_2024] ซึ่งเป็นมาตรฐานของข้อมูลเชิงภูมิศาสตร์ที่ถูกกำหนดโดย ISO 19125-1:2004\n\nมาตรฐานดังกล่าวกำหนดวิธีการแทนค่าและจัดเก็บข้อมูลวัตถุในโลกจริงที่มีลักษณะเชิงพื้นที่ (spatial geometry) เช่น จุด เส้น และพื้นที่ในระบบข้อมูลที่เกี่ยวกับภูมิสารสนเทศ (GIS) simple features จะประกอบด้วยสองส่วนหลัก คือ\n\n-   ส่วนข้อมูลเชิงภูมิศาสตร์ (geometry) ที่เก็บข้อมูลเชิงพื้นที่ของวัตถุในโลกจริง เช่น จุด เส้น และพื้นที่\n\n-   ส่วนข้อมูลที่เกี่ยวข้อง (attribute) ที่เก็บข้อมูลที่เกี่ยวข้องกับวัตถุในโลกจริง เช่น ชื่อ รหัส และค่าที่เกี่ยวข้อง\n\nนอกจากนี้ `{sf}` ยังรองรับการอ่านและเขียนไฟล์ Shapefile ซึ่งเป็นรูปแบบไฟล์ที่พัฒนาโดย ESRI สำหรับจัดเก็บข้อมูลเชิงเวกเตอร์ เช่น ข้อมูลเกี่ยวกับพิกัดและข้อมูลบรรยายที่ใช้ในระบบข้อมูลภูมิสารสนเทศ (GIS) รูปแบบ Shapefile ประกอบด้วยหลายไฟล์ เช่น `.shp` (เก็บข้อมูลเรขาคณิต), `.shx` (ดัชนีเชิงพื้นที่), และ `.dbf` (เก็บข้อมูลเชิงบรรยาย) ซึ่ง `{sf}` สามารถอ่านและแปลงเป็น sf-object เพื่อให้ใช้งานและวิเคราะห์ใน R ได้ง่ายขึ้น\n\nสำหรับการสร้าง Geospatial Visualization ของประเทศไทย สิ่งสำคัญที่ต้องเริ่มต้นคือการมี ไฟล์ข้อมูลภูมิสารสนเทศ ที่ใช้เป็นพื้นฐานในการสร้างแผนที่ ซึ่งไฟล์นี้จะบรรจุข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ต่าง ๆ ในประเทศไทย เช่น พิกัดของขอบเขตจังหวัดหรืออำเภอ โดยข้อมูลในไฟล์นี้จะเป็นพื้นฐานที่แสดงรูปร่างของแต่ละพื้นที่\n\nหลังจากมีไฟล์พื้นฐานแล้ว เราสามารถ รวบรวมข้อมูลเชิงบรรยาย (attributes) เพิ่มเติม เช่น ข้อมูลประชากร รายได้เฉลี่ย หรือความเสี่ยงต่อภัยธรรมชาติ แล้วใช้แพ็กเกจ {sf} ใน R เพื่อรวมข้อมูลเชิงบรรยายเหล่านี้เข้ากับข้อมูลพื้นที่ (spatial data) โดยการ join ตามขอบเขตพื้นที่ เช่น จังหวัดหรืออำเภอ ทำให้เราสามารถแสดงผลข้อมูลเชิงบรรยายร่วมกับแผนที่เชิงภูมิศาสตร์ได้\n\n### แหล่งข้อมูลภูมิสารสนเทศของประเทศไทย\n\n-   [OCHA Services](https://data.humdata.org/dataset/cod-ab-tha)\n\n-   [GADM](https://gadm.org/download_country_v3.html)\n\n-   [สำนักงานทรัพยากรน้ำแห่งชาติ](https://opendata.onwr.go.th/dataset)\n\n### นำเข้า shapefile\n\nเราสามารถนำเข้าไฟล์ข้อมูลภูมิสารสนเทศ (shapefile) ด้วยคำสั่ง `st_read()` ของ `{sf}` โดยระบุที่อยู่ของไฟล์ shapefile ที่ต้องการนำเข้า ดังตัวอย่างต่อไปนี้\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_prov_map <- st_read(\"/Users/choat/Downloads/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm1_rtsd_20220121.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/choat/Downloads/tha_adm_rtsd_itos_20210121_shp/tha_admbnda_adm1_rtsd_20220121.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\nทดลองเรียกตัวอย่างข้อมูลขึ้นมาดู\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(thai_prov_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 100.1913 ymin: 13.47842 xmax: 100.9639 ymax: 14.80246\nGeodetic CRS:  WGS 84\n  Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1   2.417227 0.13133873                  Bangkok  กรุงเทพมหานคร       TH10\n2   1.695100 0.07926199             Samut Prakan    สมุทรปราการ       TH11\n3   1.251111 0.05323766               Nonthaburi         นนทบุรี       TH12\n4   1.884945 0.12698345             Pathum Thani        ปทุมธานี       TH13\n5   3.041716 0.21393797 Phra Nakhon Si Ayutthaya พระนครศรีอยุธยา       TH14\n6   1.739908 0.07920961                Ang Thong        อ่างทอง       TH15\n  ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n2     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n3     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n4     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n5     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n6     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n  ADM0_PCODE       date    validOn validTo                       geometry\n1         TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.6139 13...\n2         TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.7306 13...\n3         TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.3415 14...\n4         TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.8916 14...\n5         TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.5131 14...\n6         TH 2019-02-18 2022-01-22    <NA> MULTIPOLYGON (((100.3332 14...\n```\n\n\n:::\n:::\n\n\n\nสังเกตว่าชุดข้อมูล `sf` มีส่วนประกอบสองส่วนดังที่กล่าวไว้ ส่วนแรกที่เป็นข้อมูลเชิงพื้นที่จะอยู่ในคอลัมน์ `geometry` ซึ่งเก็บข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ต่าง ๆ ในประเทศไทย ส่วนที่สองคือข้อมูลเชิงบรรยายที่เกี่ยวข้องกับพื้นที่นั้น ๆ จะอยู่ในคอลัมน์อื่น ๆ ที่ไม่ใช่ `geometry` ซึ่งเก็บข้อมูลที่เกี่ยวข้องกับพื้นที่นั้น ๆ เช่น ชื่อ รหัส และค่าที่เกี่ยวข้อง\n\nชุดข้อมูลข้างต้นเมื่อพิจารณาส่วน `geometry` จะเห็นว่ามีการกำกับไว้ว่าเป็น `MULTIPOLYGON` ซึ่งเป็นรูปแบบของเรขาคณิตเชิงพื้นที่ประเภทหนึ่งที่มีพื้นที่ย่อยหลาย ๆ พื้นที่ีรวมกัน เราสามารถนำข้อมูลส่วนนี้มาสร้างทัศนภาพข้อมูลได้เลยดังนี้\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### plot(thai_prov_map)\nplot(thai_prov_map[\"Shape_Area\"])\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n### `{ggplot2}` with `{sf}`\n\nเราสามารถใช้ ggplot2 กับ object ประเภท `{sf}` ได้โดยใช้ `geom_sf()` ซึ่งเป็น geom ที่ใช้สำหรับพล็อตข้อมูลเชิงภูมิศาสตร์ ดังตัวอย่างต่อไปนี้\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- thai_prov_map %>% \n  ggplot() + \n  geom_sf(aes(geometry = geometry, fill = Shape_Area))\np1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### Coordinate Reference System\n\nCoordinate Reference System (CRS) เป็นระบบพิกัดที่ใช้ในการกำหนดตำแหน่งของวัตถุในโลกจริงแบบ 3D ให้อยู่บนแผนที่ ระบบ CRS มีหลายรูปแบบขึ้นอยู่กับการใช้งาน เช่น\n\n-   WGS84 (World Geodetic System 1984: EPSG:4326) เป็นระบบพิกัดที่ใช้กันทั่วไปน่าจะแพร่หลายที่สุดในโลกระบบหนึ่งอยู่ในกลุ่ม geographic coordinate system (GCS) ลักษณะเด่นคือการระบุตำแหน่งต่าง ๆ หรือรูปทรงเรขาคณิตบนโลกผ่านพิกัดลองจิจูด (latitude) และละติจูด (longitude) เป็นระบบที่ง่ายแต่อาจไม่ได้มีความแม่นยำสูงมาก\n\n-   NAD83 (EPSG:4269) คล้าย WGS84 แต่มีการปรับปรุงความแม่นยำในการฉายภาพให้ตรงกับสภาพของทวีปอเมริกาเหนือมากขึ้น\n\n-   Web Mercator (EPSG:3857) เป็นระบบพิกัดประเภท projected coordinate system (PCS) เน้นใช้แสดงผลบน website เช่น google map, openstreetmap ลักษณะเด่นคือมีการแปลงพิกัดบนทรงกลม (โลก) ให้เป็นพื้นราบ 2D โดยใช้ mercator projection วิธีการนี้มีแนวโน้มบิดเบือนพื้นที่บริเวณขั้วโลกให้ดูใหญ่กว่าความเป็นจริง\n\n-   UTM (Universal Transverse Mercator) เป็นระบบพิกัดที่ใช้ในการแสดงผลบนแผนที่ที่มีความแม่นยำสูง โดยแบ่งโลกออกเป็น 60 โซนตามแนวตั้ง แต่ละโซนมีความกว้าง 6 องศา และมีระบบพิกัดของตัวเอง การแปลงพิกัดบนทรงกลม (โลก) ให้เป็นพื้นราบ 2D โดยใช้ Transverse Mercator projection พิกัดนี้เหมาะกับการทำแผนที่พื้นที่ขนาดเล็ก\n\nใน R เราสามารถตรวจสอบ CRS ของข้อมูลเชิงภูมิศาสตร์ได้ด้วยคำสั่ง `st_crs()` และเปลี่ยน CRS ด้วยคำสั่ง `st_transform()` ดังตัวอย่างต่อไปนี้\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thai_prov_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\np2 <- thai_prov_map %>% \n  st_transform(crs = 3857) %>%\n  ggplot()+\n  geom_sf(aes(geometry = geometry, fill = Shape_Area))+\n  ggtitle(\"EPSG:3857\")\n\np3 <- thai_prov_map %>% \n  st_transform(crs = 32647 ) %>% \n  ggplot()+\n  geom_sf(aes(geometry = geometry, fill = Shape_Area))+\n  ggtitle(\"EPSG:32647\")\n\np1+p2+p3\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=1440}\n:::\n:::\n\n\n\n### Geometry\n\nข้อมูลเชิงพื้นที่ที่อยู่ในรูปของ geometry ใน sf มีหลายประเภท ซึ่งแต่ละประเภทจะเก็บข้อมูลเรขาคณิตเชิงพื้นที่ของวัตถุในโลกจริงในรูปแบบที่แตกต่างกัน ประเภทข้อมูลหลัก ๆ เช่น\n\n-   POINT เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของจุดบนแผนที่ ซึ่งมีค่าพิกัดลองและละติจูด\n\n-   LINESTRING เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของเส้นที่เชื่อมต่อจุดหลาย ๆ จุดเข้าด้วยกัน\n\n-   POLYGON เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ที่มีขอบเขตเป็นเส้นต่อเนื่อง ๆ ที่ปิดรูป\n\n-   MULTIPOLYGON เป็นข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ที่มีขอบเขตเป็นเส้นต่อเนื่อง ๆ ที่ปิดรูป แต่มีพื้นที่ย่อยหลาย ๆ พื้นที่รวมกัน\n\nในแผนภาพหนึ่ง ๆ อาจจะต้องใช้ geometry หลายประเภทเพื่อนำเสนอข้อมูลเชิงพื้นที่หลากหลายลักษณะขึ้นอยู่งาน\n\n### Attributes\n\nAttribute เป็นข้อมูลคุณลักษณะของวัตถุเชิงพื้นที่ใช้บรรยายสภาพหรือบริบทของวัตถุนั้น ๆ ในโลกจริง ใน `{sf}` จะเก็บ attribute ดังกล่าวในรูปแบบตารางเหมือนกับ data.frame แต่จะมีความเชื่อมโยงกับข้อมูลเชิงพื้นที่ในคอลัมน์ `geometry` พิจารณาชุดข้อมูล `thai_prov_map` ที่เราได้นำเข้ามาก่อนหน้านี้ จะเห็นว่ามีตัวแปรคุณลักษณะหลายตัวที่นำเข้ามาพร้อมกัน\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(thai_prov_map)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 17\n$ Shape_Leng <dbl> 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area <dbl> 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    <chr> \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE <chr> \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    <chr> \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE <chr> \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       <date> 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    <date> 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON (…\n```\n\n\n:::\n:::\n\n\n\nผลลัพธ์ข้างต้นจะเห็นว่า\n\n-   ชุดข้อมูลมี 77 แถว (ตามจำนวนจังหวัด) และมี 17 คอลัมน์\n\n-   คอลัมน์ `geometry` เก็บข้อมูลเรขาคณิตเชิงพื้นที่ของพื้นที่ต่าง ๆ ในประเทศไทย\n\n-   คอลัมน์ที่เหลือเป็นข้อมูลพื้นฐานที่เกี่ยวข้องของแต่ละจังหวัด เช่น ความยาว ขนาดพื้นที่ ชื่อ รหัส ...\n\n### `{sf}` with `{tidyverse}`\n\nเนื่องจาก `{sf}` ถูกออกแบบให้มีลักษณะเป็นชุดข้อมูลแบบ data.frame ดังนั้นจึงสามารถทำงานภายใต้ tidyverse ได้โดยตรง ซึ่งเป็นข้อได้เปรียบที่สำคัญที่ทำให้สามารถใช้ `{sf}` ในการจัดการข้อมูลเชิงภูมิศาสตร์ได้ง่ายขึ้น เบื้องต้นเราสามารถใช้ `{dplyr}` หรือ `{tidyr}` รวมทั้ง `{ggplot2}` (แสดงให้ดูไปแล้ว) เพื่อจัดกระทำและสร้างทัศนภาพข้อมูลเชิงพื้นที่ตามที่ต้องการได้ เช่น\n\n#### การคัดเลือกตัวแปร\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_prov_map %>% \n  select(ADM1_TH, Shape_Area) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 100.1913 ymin: 13.47842 xmax: 100.9639 ymax: 14.80246\nGeodetic CRS:  WGS 84\n        ADM1_TH Shape_Area                       geometry\n1  กรุงเทพมหานคร 0.13133873 MULTIPOLYGON (((100.6139 13...\n2    สมุทรปราการ 0.07926199 MULTIPOLYGON (((100.7306 13...\n3         นนทบุรี 0.05323766 MULTIPOLYGON (((100.3415 14...\n4        ปทุมธานี 0.12698345 MULTIPOLYGON (((100.8916 14...\n5 พระนครศรีอยุธยา 0.21393797 MULTIPOLYGON (((100.5131 14...\n6        อ่างทอง 0.07920961 MULTIPOLYGON (((100.3332 14...\n```\n\n\n:::\n:::\n\n\n\nผลลัพธ์ข้างต้นเราจะเห็นว่า `geometry` จะติดมากับ attribute ที่เราเลือกไว้ด้วยเสมอ\n\n#### การคัดกรองข้อมูล\n\n\n\n::: {.cell figh.height='6'}\n\n```{.r .cell-code}\np4 <- thai_prov_map %>% \n  filter(ADM1_TH == \"กรุงเทพมหานคร\") %>% \n  ggplot()+\n  geom_sf(fill = \"steelblue\")+\n  theme_void()+\n  ggtitle(\"Bangkok\")\n\np4\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n#### การ join ข้อมูล\n\nโดยปกติเราสามารถเข้าถึงข้อมูลเชิงพื้นที่ที่จะใช้สำหรับสร้างแผนที่ที่ต้องการได้ไม่ยาก ปัญหาหลักคือเราต้องการชุดข้อมูลเชิงพื้นที่ที่ประกอบด้วย attribute เป้าหมายที่จะใช้นำเสนอซึ่งชุดข้อมูลลักษณะนี้ผู้วิเคราะห์จำเป็นต้องสร้างเอง ยกตัวอย่างเช่น\n\n-   [ค่าใช้จ่ายเฉลี่ยต่อเดือนของครัวเรือนรายจังหวัด](average_expense.xlsx)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ndata_expense <- read_excel(\"average_expense.xlsx\", sheet = 1, skip = 2)\nhead(data_expense, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 14\n   ภาค    `จังหวัด` `2555` `2556` `2557` `2558` `2559` `2560` `2561` `2562` `2563`\n   <chr>  <chr>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 ทั่วราช… ทั่วราชอ… 18766  19061  20892. 21157  21144. 21436. 21346. 20742. 21329.\n 2 กรุงเท… กรุงเทพ… 31971. 32425  31606. 30882  32091. 33126. 33408. 30778. 31142.\n 3 <NA>   กรุงเทพ… 33957. 35024. 34426. 33086. 35101. 35351. 34127. 31753. 32052.\n 4 <NA>   สมุทรปร… 25861. 26193. 22747. 22332. 24354. 24355. 23232. 21423. 23851.\n 5 <NA>   นนทบุรี   28731. 26947. 30812. 31381  28828. 33313. 33809. 32189. 33042.\n 6 <NA>   ปทุมธานี  30669. 29514  30197. 29770  31271. 33604. 43301. 37086. 33824.\n 7 ภาคกล… ภาคกลาง 19762  19728  21144. 21055  20493. 21120. 21168. 20645. 21771.\n 8 <NA>   พระนคร… 25216. 20494. 20410. 22218. 23095. 23780. 22790. 24440. 23391.\n 9 <NA>   อ่างทอง  21273. 21182. 19634. 17574. 20372. 17162. 17295. 17011. 17727.\n10 <NA>   ลพบุรี    17357. 15945. 14911. 17969. 15876. 16012. 17017. 16830. 19180.\n# ℹ 3 more variables: `2564` <dbl>, `2565` <dbl>, `2566` <dbl>\n```\n\n\n:::\n:::\n\n\n\nสมมุติว่าวัตถุประสงค์คือการ plot รายจ่ายโดยเฉลี่ยของครัวเรือนในแต่ะละจังหวัด เราจำเป็นที่จะต้องเชื่อมโยงข้อมูลรายจ่ายดังกล่าวเข้ากับข้อมูลเชิงพื้นที่ใน `thai_prov_map` อย่างไรก็ตามหากใช้การรวมข้อมูลด้วย `dplyr` แบบปกติจะทำให้สูญเสีย class ของข้อมูลเดิมคือ `sf` ไป การแก้ปัญหาดังกล่าวสามารถทำได้โดยใช้ `st_as_sf()` ในการแปลงข้อมูลเชิงพื้นที่ที่เราได้รวมข้อมูลเชิงบรรยายเข้าไปกลับเป็น `sf` อีกครั้ง\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_expense %>% \n  rename(region = 1,\n         prov = 2,\n         year2566 = `2566`) %>% \n  select(region, prov, year2566) %>% \n  fill(region, .direction = \"down\") %>% \n  right_join(thai_prov_map, \n             by = join_by(\"prov\" == \"ADM1_TH\")) %>% \n  st_as_sf() %>% \n  ggplot()+\n  geom_sf(aes(fill = year2566))+\n  scale_fill_gradient2(low = \"maroon\", \n                       mid = \"white\",\n                       high = \"steelblue\", \n                       midpoint = 20000)+\n  theme_light()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n#### `group_by()` และ `summarise()`\n\nทำนองเดียวกับการจัดกระทำข้อมูลทั่วไป เราสามารถใช้ `group_by()` และ `summarise()` ในการสรุปข้อมูลเชิงพื้นที่ได้เช่นกัน\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexpense_st_joined <- data_expense %>% \n  rename(region = 1,\n         prov = 2,\n         year2566 = `2566`) %>% \n  select(region, prov, year2566) %>% \n  fill(region, .direction = \"down\") %>% \n  right_join(thai_prov_map, \n             by = join_by(\"prov\" == \"ADM1_TH\")) %>% \n  st_as_sf()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexpense_st_joined %>% \n  group_by(region) %>% \n  summarise(avg_expense = mean(year2566)) %>% \n  ggplot()+\n  geom_sf(aes(fill = avg_expense))+\n  scale_fill_gradient2(low = \"maroon\", \n                       mid = \"white\",\n                       high = \"steelblue\", \n                       midpoint = 20000)+\n  theme_bw()+\n  ggtitle(\"Average Expense by Region\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nจะเห็นว่าการใช้ grammar of data maniputation ร่วมกับ `{sf}` ทำให้เราสามารถจัดการข้อมูลเชิงพื้นที่ได้อย่างมีประสิทธิภาพ สามารถนำเสนอมิติต่าง ๆ ของข้อมูลได้โดยง่าย\n\n### Geometry Operations\n\n-   `st_distance()` ใช้คำนวณระยะห่างระหว่าง geometry สองตัว\n\n-   `st_union()` ใช้รวม geometry หลายตัวเข้าด้วยกัน\n\n-   `st_centroid()` ใช้หาจุดศูนย์กลางของ geometry\n\nst_intersects(), st_disjoint(), st_touches(), st_crosses(), st_within(), st_contains(), st_overlaps(), st_equals(), st_covers(), st_covered_by(), st_equals_exact() and st_is_within_distance() รายละเอียดถ้าจำเป็นต้องใช้สามารถศึกษาได้จาก [@Pebesma_sf_2024]\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- thai_prov_map %>% filter(ADM1_TH %in% c(\"กรุงเทพมหานคร\",\"ยะลา\",\"เชียงใหม่\"))\ny <- thai_prov_map %>% filter(ADM1_TH == \"นครราชสีมา\")\nst_distance(x,y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnits: [m]\n          [,1]\n[1,]  68260.06\n[2,] 370023.01\n[3,] 834005.26\n```\n\n\n:::\n\n```{.r .cell-code}\nst_distance(x,y) %>% units::set_units(km)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnits: [km]\n          [,1]\n[1,]  68.26006\n[2,] 370.02301\n[3,] 834.00526\n```\n\n\n:::\n:::\n\n\n\n### กิจกรรม\n\nขอให้ผู้เรียนลองสร้างทัศนภาพข้อมูลพื้นที่เสี่ยงภัยของประเทศดังรูป\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\noptions:        ENCODING=WINDOWS-874 \nReading layer `All_Thai_AB_161061' from data source \n  `/Users/choat/Downloads/5.พื้นที่เป้าหมาย (Area Based)/All_Thai_AB_161061.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 66 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 418132 ymin: 637937.4 xmax: 1190131 ymax: 2263222\nProjected CRS: WGS 84 / UTM zone 47N\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nชุดข้อมูลที่เกี่ยวข้อง\n\n-   [พื้นที่เป้าหมาย](https://opendata.onwr.go.th/dataset/onwr_66_03_01)\n\n-   [OCHA Services](https://data.humdata.org/dataset/cod-ab-tha)\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}