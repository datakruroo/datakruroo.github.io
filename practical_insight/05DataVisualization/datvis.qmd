---
title: "6. Basic Visualization using ggplot2"
subtitle: "<b>Practical Insight: Doing Data Science in Education with R</b>"
author: ผศ.ดร.สิวะโชติ ศรีสุทธิยากร
logo: "images/logo.png"
footer: "[Practical Insight: Doing Data Science in Education with R](https://datakruroo.netlify.app/practical_insight/_site/)"
format: 
  html:
    number-sections: true
  revealjs:
    output-file: datvis_slide.html
    theme: slides.scss
    multiplex: true
    transition: slide
    slide-number: true
    navigation-mode: vertical
    scrollable: true
    chalkboard: true
    menu: 
      numbers: true
    slide-tone: false
editor: visual
execute:
  freeze: auto
---

# Basic Visualization

## Definition

![](images/datvis.png)

## Visual Representation

![](images/datvis2.png)

## Visual Representation

![](images/datvis3.png)

# Basic ggplot2

## ggplot2 {.smaller}

![](images/image-1560740953.png){width="15%"}

-   Open-source data visualization package for R and Python users

-   พัฒนาโดย Hadley Wickham และทีมงาน

-   Based on **"Grammar of Graphics"**

    -   consistent and intuitive framework

    -   powerful

    -   flexible



## Data visualization with ggplot2

![](images/image-1052574543.png){width="85%"}

## Data visualization with ggplot2

![](images/image-522923699.png){width="90%"}

## The grammar of graphics (GG) {.smaller}

::: columns
::: {.column width="50%"}
![](images/image-2120096647.png){fig-align="center" width="60%"}
:::

::: {.column width="50%"}
กรอบแนวคิดเชิงทฤษฎีใช้อธิบาย ขั้นตอนวิธี (algorithm) สำหรับสร้างทัศนภาพข้อมูล ซึ่งถูกนำไปใช้อย่างแพร่หลาย

-   [ggplot2](https://ggplot2.tidyverse.org/)

-   Polalis ---\> Tableau

-   Vega-Lite
:::
:::

## Graphics {.smaller}

```{r echo=F, fig.height=5, message = F, warning = F}
library(ggplot2)
library(dplyr)
library(tidyr)
library(readxl)
library(gapminder)
library(ggrepel)
p<-gapminder %>% 
  filter(year == "2007") %>%
  ggplot(aes(x = gdpPercap, 
             y= lifeExp, 
             col=continent))+
  geom_point(aes(size = pop),alpha=0.5)+
  geom_text_repel(aes(label=country, size = pop), 
                  show.legend = F,
                  max.overlaps = 12)+
  scale_x_log10(limits=c(250,150000),
                breaks=c(250, 500, 1000,2000,4000,8000,16000,32000,64000,128000))+
  scale_size(breaks=c(10^6, 10^7, 10^8, 10^9),
                  labels = c("1","10","100","1,000 Millions"),
                  # max_size=30
                  range = c(1,10)
                  )+
  scale_color_brewer(type = "qual", palette=2)+
  xlab("Income (GDP per capita, $ per year)")+
  ylab("Lifespan (Life expectancy, years)")+
  labs(size = "Size: Population",
       col = "Color: Region")+
  theme_light()+
  theme(panel.grid.minor = element_blank())
p
```

## Decompose Graphics {.smaller}

สาระสำคัญของกรอบแนวคิดใน grammar of graphics กล่าวถึงการสร้างทัศนภาพข้อมูลใด ๆ จากการผสมองค์ประกอบหลักจำนวน 8 องค์ประกอบเข้าด้วยกัน (ใน ggplot2 เรียกองค์ประกอบเหล่านี้ว่า layers) องค์ประกอบดังกล่าวได้แก่ data, aesthetic mapping, geometries, scales, statistical transformations, facets, themes, coordinates

โครงสร้าง syntax ของ ggplot2

    ggplot(data = <DATA>) +
      <geom function>(mapping = aes(<mappings>),
                 stat =<STAT>) +
      <coordinate function>() +
      <scale function>() +
      <theme function>() +
      <facet function>() +
      ...

## Data {.smaller}

-   Dataframe/tibble ที่บันทึกข้อมูลดิบที่จะใช้สร้างทัศนภาพข้อมูล

-   ชุดข้อมูลมีข้อตกลงเบื้องต้นคือต้องอยู่ในรูปแบบ tidy data และถูกทำความสะอาดมาเรียบร้อยแล้ว ผู้วิเคราะห์สามารถใช้ tidyr/dplyr เพื่อจัดระเบียบและจัดกระทำข้อมูลก่อนนำเข้าใน ggplot2 หรืออาจดำเนินการระหว่างนำเข้า ggplot2 ก็ได้ ดังตัวอย่างคำสั่งต่อไปนี้

## **Aesthetic mapping** {.smaller}


เป็นส่วนการแปลง variation ในข้อมูลให้อยู่ในรูปของ attribute ต่าง ๆ ในทัศนภาพข้อมูล รายการด้านล่างแสดง aesthetic mapping สำหรับทัศนภาพข้อมูลส่วนใหญ่

:::: {.columns}

::: {.column width="50%"}

-   `x`, `y`

-   `color` หรือ `col`

-   `fill`

-   `alpha`

-   `shape`

:::

::: {.column width="50%"}

-   `size`

-   `linetype`

-   `label`

-   `group`

:::

::::

## **Geometric objects (geoms)** {.smaller}

![](images/datarepresent.png){width="50%"}

## **Geometric objects (geoms)** {.smaller}

ใช้กำหนดสัญลักษณ์เชิงเรขาคณิตต่าง ๆ ที่จะใช้พล็อตข้อมูลบนทัศนภาพ สัญลักษณ์ที่กำหนดในขั้นตอนนี้จะคุณลักษณะที่ผันแปรตามข้อมูล ตามที่กำหนดไว้ใน aesthetic mapping

:::: {.columns}

::: {.column width="50%"}

**Amounts**

-   `geom_bar()`

-   `geom_col()`

-   `geom_dotplot()`

-    `geom_tile()`



**Relationships**

-   `geom_point()`

-   `geom_line()`

-   `geom_smooth()`


:::

::: {.column width="50%"}

**Distributions**

-   `geom_histogram()`

-   `geom_density()`

-   `geom_boxplot()`

-   `geom_violin()`

-   `geom_jitter()`

**Composition**

-   `geom_area()`

:::
::::

## Other components {.smaller}

- Scales เมื่อตัวแปรถูกแปลงให้มาอยู่บน attribute ของทัศนภาพข้อมูลผ่าน aesthetic mapping แล้ว ขอบเขตหรือช่วงที่เป็นไปได้ของความผันแปรของ visual element ต่าง ๆ บนทัศนภาพจะเรียกว่า scale การปรับแต่ง scale ของแผนภาพให้ตรงกับความต้องการของผู้วิเคราะห์สามารถทำได้ผ่านฟังก์ชัน `scale_XXX_YYY()` โดยที่ XXX คือชื่อของ aesthetic และ YYY คือชื่อของ scale ที่ต้องการปรับแต่ง เช่น `scale_x_continuous()` หรือ `scale_color_manual()`

- Theme เป็นการปรับแต่งคุณลักษณะต่าง ๆ ของทัศนภาพข้อมูล เช่น สีพื้นหลัง สีของกรอบแกน สีของตัวอักษร และอื่น ๆ ผ่านฟังก์ชัน `theme()`

# กิจกรรม : My First Scatter plot

1. ติดตั้ง library-`gapminder` และ `ggplot2` 

2. นำเข้าข้อมูล `gapminder` โดยพิมพ์คำสั่ง `library(gapminder)` และ `gapminder`

3. ลองสำรวจข้อมูลเบื้องต้น ชุดข้อมูล `gapminder` มีตัวแปรกี่ตัว และมีข้อมูลกี่แถว

4. ขั้นตอนต่อไปนี้จะเริ่มสร้าง scatter plot ด้วย ggplot2

  - พิมพ์คำสั่ง `ggplot(data = gapminder)` ผลลัพธ์ที่ได้เป็นอย่างไร
  
  - เพิ่ม aesthetic mapping โดยพิมพ์คำสั่ง `ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp))` ผลลัพธ์ที่ได้เป็นอย่างไร

  - เพิ่ม geometric object โดยพิมพ์คำสั่ง 

```{r eval=F}
ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + 
  geom_point()
```


# กิจกรรม : Creating any plots with ggplot2

1. จำนวนประเทศจำแนกตามทวีปเป็นอย่างไร ในปี 2007

2. การแจกแจงของ lifeExp กับ gdpPercap ในปี 2007 มีลักษณะเหมือนหรือแตกต่างกันอย่างไร

  
3. การแจกแจงของอายุขัยเฉลี่ยของประชากรในปี 2007 ระหว่างประเทศที่มี gdpPercap มากกว่า 10000$ กับต่ำกว่า 10000$ เหมือนหรือแตกต่างกันอย่างไร

4. อายุขัยเฉลี่ยของประชากรในทวีปเอเซียมีแนวโน้มเปลี่ยนแปลงอย่างไรในช่วงปี 1952-2007

  - line plot
  - boxplot
  - heatmap

5. เปรียบเทียบสัดส่วนประเทศที่มีค่า gdpPercap มากกว่า 10000$ กับต่ำกว่า 10000$ ในช่วงปี 1952 - 2007
