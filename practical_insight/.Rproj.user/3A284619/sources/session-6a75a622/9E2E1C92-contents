---
title: "Day1_01Basic Concepts"
output: html_notebook
---

## The Grammar of Graphics

grammar of graphics เป็นกรอบแนวคิดเชิงทฤษฎีที่พัฒนาขึ้นโดย Leland Wilkinson ใช้อธิบายขั้นตอนวิธี (algorithm) สำหรับสร้างทัศนภาพข้อมูล ซึ่งถูกนำไปใช้อย่างแพร่หลาย

-   ggplot2

-   Polaris ---\> Tableau

-   Vega-Lite

## Decompose Graphics

สาระสำคัญของกรอบแนวคิดใน grammar of graphics กล่าวถึงการสร้างทัศนภาพข้อมูลใด ๆ จากการผสมองค์ประกอบหลักจำนวน 8 องค์ประกอบเข้าด้วยกัน (ใน ggplot2 เรียกองค์ประกอบเหล่านี้ว่า layers) องค์ประกอบดังกล่าวได้แก่ data, aesthetic mapping, geometries, scales, statistical transformations, facets, themes, coordinates

โครงสร้าง syntax ของ ggplot2

    ggplot(data = <DATA>) +
      <geom function>(mapping = aes(<mappings>),
                 stat =<STAT>) +
      <coordinate function>() +
      <scale function>() +
      <theme function>() +
      <facet function>() +
      ...

### Data

-   Dataframe/tibble ที่บันทึกข้อมูลดิบที่จะใช้สร้างทัศนภาพข้อมูล

-   ชุดข้อมูลมีข้อตกลงเบื้องต้นคือต้องอยู่ในรูปแบบ tidy data และถูกทำความสะอาดมาเรียบร้อยแล้ว ผู้วิเคราะห์สามารถใช้ tidyr/dplyr เพื่อจัดระเบียบและจัดกระทำข้อมูลก่อนนำเข้าใน ggplot2 หรืออาจดำเนินการระหว่างนำเข้า ggplot2 ก็ได้ ดังตัวอย่างคำสั่งต่อไปนี้

### **Aesthetic mapping**

เป็นส่วนการแปลง variation ในข้อมูลให้อยู่ในรูปของ attribute ต่าง ๆ ในทัศนภาพข้อมูล รายการด้านล่างแสดง aesthetic mapping สำหรับทัศนภาพข้อมูลส่วนใหญ่

-   `x`, `y`

-   `color` หรือ `col`

-   `fill`

-   `alpha`

-   `shape`

-   `size`

-   `linetype`

-   `label`

-   `group`

### **Geometric objects (geoms)**

ใช้กำหนดสัญลักษณ์เชิงเรขาคณิตต่าง ๆ ที่จะใช้พล็อตข้อมูลบนทัศนภาพ สัญลักษณ์ที่กำหนดในขั้นตอนนี้จะคุณลักษณะที่ผันแปรตามข้อมูล ตามที่กำหนดไว้ใน aesthetic mapping

-   `geom_point()`

-   `geom_line()`

-   `geom_path()`

-   `geom_polygon()`

-   `geom_histogram()`

-   `geom_density()`

-   `geom_boxplot()`

-   `geom_violin()`

-   `geom_jitter()`

-   `geom_bar()`

-   `geom_area()`

-   `geom_smooth()`

-   `geom_text()`

### Statistical transformations

บางครั้งสาระสำคัญที่ต้องการนำเสนอในทัศนภาพข้อมูลไม่ใช่ข้อมูลดิบ แต่เป็นค่าสถิติที่คำนวณจากข้อมูลดิบ statistical เป็น layer ที่จะช่วยคำนวณหรือประมวลผลค่าสถิติต่าง ๆ และนำค่าประมาณที่ได้มานำเสนอบนทัศนภาพข้อมูล ภายใต้ aesthetic mapping และ geometric ที่กำหนด

statistical tranformation layer มักเป็น implicit layer กล่าวคือเป็น layer ที่ทำงานอยู่เบื้องหลัง geometric layer หลาย ๆ ตัว เช่น `geom_boxplot()`, `geom_histogram()` หรือ `geom_smooth()` เป็นต้น

### Scales

เมื่อตัวแปรถูกแปลงให้มาอยู่บน attribute ของทัศนภาพข้อมูลผ่าน aesthetic mapping แล้ว ขอบเขตหรือช่วงที่เป็นไปได้ของความผันแปรของ visual element ต่าง ๆ บนทัศนภาพจะเรียกว่า scale

บ่อยครั้งที่ default scale อาจไม่เหมาะสม ผู้วิเคราะห์สามารถปรับแต่งหรือกำหนดคุณลักษณะใหม่ให้กับ scale ดังกล่าวได้ผ่าน scale layer

-   `scale_x_continuous()`, `scale_y_continuous()`

-   `scale_x_discrete()`, `scale_y_discrete()`

-   `scale_color_continuous()`, `scale_color_discrete()`, `scale_color_brewer()`

-   `scale_linetype()`

-   ...

### Facets

ใช้สร้าง plot ย่อยหลาย plot ตามค่าของตัวแปรที่กำหนด `facet_wrap()`, `facet_grid()`

### Coordinates

ใช้กำหนดระบบพิกัดหรือปรับแต่งพารามิเตอร์เกี่ยวกับพิกัดของทัศนภาพข้อมูล

-   `coord_cartesian()`

```{=html}
<!-- -->
```
-   `coord_polar()`

-   `coord_map()`

-   `coord_fixed()`

### Theme

ใช้กำหนด mood and tone ของทัศนภาพข้อมูล

## กิจกรรม : ทำความเข้าใจ layer พื้นฐาน

กิจกรรมนี้ใช้ชุดข้อมูล `gapminder` เป็นตัวอย่าง ชุดข้อมูลดังกล่าวประกอบด้วยข้อมูลดังนี้

```{r}
#install.packages("gapminder")
library(gapminder)
glimpse(gapminder, width=80)
```

### ทบทวน Tidy Data

พิจารณาชุดข้อมูลสองรูปแบบด้านล่าง

-   Wide format data

-   Long format data

```{r}
gapminder %>% 
    select(-pop, -gdpPercap) %>%
    spread(key = "year",
           value = "lifeExp")
```

```{r}
gapminder %>% 
    select(-pop, -gdpPercap)
```

### เป้าหมายของกิจกรรม

สร้าง scatter plot จากชุดข้อมูล gapminder ตามตัวอย่างใน ppt

![](https://github.com/datakruroo/creating_datvis_with-R/blob/main/objective1.png?raw=true)

### My First scatter plot

(1) ขั้นตอนแรกของการสร้างทัศนภาพข้อมูลด้วย ggplot2 คือการกำหนด **Data Layer** ผ่านฟังก์ชัน `ggplot()` ดังตัวอย่างด้านล่าง

ผลลัพธ์จากการ run คำสั่งข้างต้นเป็นอย่างไร?

```{r}
ggplot(data = gapminder)
```

(2) เมื่อกำหนดข้อมูลของทัศนภาพแล้ว ขั้นตอนต่อมาคือการระบุการ mapping กันระหว่างตัวแปรในชุดข้อมูลกับ attribute ของทัศนภาพ (ใน ggplot2 เรียก attribute ดังกล่าวว่า aesthetic) ตัวอย่างคำสั่งด้านล่างแสดงการ mapping ตัวแปรกับ position attribute ในทัศนภาพ

ผลลัพธ์จากการ run คำสั่งด้านล่างเป็นอย่างไร?

```{r}
ggplot(data = gapminder %>% filter(year == 2007),
       mapping = aes(x = gdpPercap, y = lifeExp))
```

(3) ขั้นตอนสุดท้าย (แต่ไม่ท้ายสุด) ผู้วิเคราะห์จะต้องระบุสัญลักษณ์เชิงเรขาคณิตแทนข้อมูลบนแผนภาพ ผ่าน geometric layer (geom) โดยใน ggplot2 มี geometric layer สำเร็จรูปให้เลือกใช้เป็นจำนวนมาก

<https://ggplot2.tidyverse.org/reference/>

การเพิ่ม geometric layer บนทัศนภาพสามารถทำได้โดยเชื่อมส่วน data และ aesthetic ใน `ggplot()` ด้วยเครื่องหมาย `+` กับ `geom_XXX()` ที่เลือกมา

ผลลัพธ์จากการ run คำสั่งด้านล่างเป็นอย่างไร? ผู้เรียนคิดว่าแผนภาพนี้มีความเหมาะสมที่จะนำไปใช้งานแล้วหรือไม่ หรือควรปรับปรุงแผนภาพนี้อย่างไรบ้าง?

```{r}
ggplot(data = gapminder %>% filter(year == 2007),
       mapping = aes(x = gdpPercap, y = lifeExp))+
  geom_point()
```
