{
  "hash": "d24235f39205f7d60fd6d059f38f8f8b",
  "result": {
    "markdown": "---\ntitle: \"6. Basic Visualization using ggplot2\"\nsubtitle: \"<b>Practical Insight: Doing Data Science in Education with R</b>\"\nauthor: ผศ.ดร.สิวะโชติ ศรีสุทธิยากร\nlogo: \"images/logo.png\"\nfooter: \"[Practical Insight: Doing Data Science in Education with R](https://datakruroo.netlify.app/practical_insight/_site/)\"\nformat: \n  html:\n    number-sections: true\n  revealjs:\n    output-file: datvis_slide.html\n    theme: slides.scss\n    multiplex: true\n    transition: slide\n    slide-number: true\n    navigation-mode: vertical\n    scrollable: true\n    chalkboard: true\n    menu: \n      numbers: true\n    slide-tone: false\neditor: visual\nexecute:\n  freeze: auto\n---\n\n\n# Basic Visualization\n\n## Definition\n\n![](images/datvis.png)\n\n## Visual Representation\n\n![](images/datvis2.png)\n\n## Visual Representation\n\n![](images/datvis3.png)\n\n# Basic ggplot2\n\n## ggplot2 {.smaller}\n\n![](images/image-1560740953.png){width=\"15%\"}\n\n-   Open-source data visualization package for R and Python users\n\n-   พัฒนาโดย Hadley Wickham และทีมงาน\n\n-   Based on **\"Grammar of Graphics\"**\n\n    -   consistent and intuitive framework\n\n    -   powerful\n\n    -   flexible\n\n\n\n## Data visualization with ggplot2\n\n![](images/image-1052574543.png){width=\"85%\"}\n\n## Data visualization with ggplot2\n\n![](images/image-522923699.png){width=\"90%\"}\n\n## The grammar of graphics (GG) {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/image-2120096647.png){fig-align=\"center\" width=\"60%\"}\n:::\n\n::: {.column width=\"50%\"}\nกรอบแนวคิดเชิงทฤษฎีใช้อธิบาย ขั้นตอนวิธี (algorithm) สำหรับสร้างทัศนภาพข้อมูล ซึ่งถูกนำไปใช้อย่างแพร่หลาย\n\n-   [ggplot2](https://ggplot2.tidyverse.org/)\n\n-   Polalis ---\\> Tableau\n\n-   Vega-Lite\n:::\n:::\n\n## Graphics {.smaller}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](datvis_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n## Decompose Graphics {.smaller}\n\nสาระสำคัญของกรอบแนวคิดใน grammar of graphics กล่าวถึงการสร้างทัศนภาพข้อมูลใด ๆ จากการผสมองค์ประกอบหลักจำนวน 8 องค์ประกอบเข้าด้วยกัน (ใน ggplot2 เรียกองค์ประกอบเหล่านี้ว่า layers) องค์ประกอบดังกล่าวได้แก่ data, aesthetic mapping, geometries, scales, statistical transformations, facets, themes, coordinates\n\nโครงสร้าง syntax ของ ggplot2\n\n    ggplot(data = <DATA>) +\n      <geom function>(mapping = aes(<mappings>),\n                 stat =<STAT>) +\n      <coordinate function>() +\n      <scale function>() +\n      <theme function>() +\n      <facet function>() +\n      ...\n\n## Data {.smaller}\n\n-   Dataframe/tibble ที่บันทึกข้อมูลดิบที่จะใช้สร้างทัศนภาพข้อมูล\n\n-   ชุดข้อมูลมีข้อตกลงเบื้องต้นคือต้องอยู่ในรูปแบบ tidy data และถูกทำความสะอาดมาเรียบร้อยแล้ว ผู้วิเคราะห์สามารถใช้ tidyr/dplyr เพื่อจัดระเบียบและจัดกระทำข้อมูลก่อนนำเข้าใน ggplot2 หรืออาจดำเนินการระหว่างนำเข้า ggplot2 ก็ได้ ดังตัวอย่างคำสั่งต่อไปนี้\n\n## **Aesthetic mapping** {.smaller}\n\n\nเป็นส่วนการแปลง variation ในข้อมูลให้อยู่ในรูปของ attribute ต่าง ๆ ในทัศนภาพข้อมูล รายการด้านล่างแสดง aesthetic mapping สำหรับทัศนภาพข้อมูลส่วนใหญ่\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n-   `x`, `y`\n\n-   `color` หรือ `col`\n\n-   `fill`\n\n-   `alpha`\n\n-   `shape`\n\n:::\n\n::: {.column width=\"50%\"}\n\n-   `size`\n\n-   `linetype`\n\n-   `label`\n\n-   `group`\n\n:::\n\n::::\n\n## **Geometric objects (geoms)** {.smaller}\n\n![](images/datarepresent.png){width=\"50%\"}\n\n## **Geometric objects (geoms)** {.smaller}\n\nใช้กำหนดสัญลักษณ์เชิงเรขาคณิตต่าง ๆ ที่จะใช้พล็อตข้อมูลบนทัศนภาพ สัญลักษณ์ที่กำหนดในขั้นตอนนี้จะคุณลักษณะที่ผันแปรตามข้อมูล ตามที่กำหนดไว้ใน aesthetic mapping\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n**Amounts**\n\n-   `geom_bar()`\n\n-   `geom_col()`\n\n-   `geom_dotplot()`\n\n-    `geom_tile()`\n\n\n\n**Relationships**\n\n-   `geom_point()`\n\n-   `geom_line()`\n\n-   `geom_smooth()`\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n**Distributions**\n\n-   `geom_histogram()`\n\n-   `geom_density()`\n\n-   `geom_boxplot()`\n\n-   `geom_violin()`\n\n-   `geom_jitter()`\n\n**Composition**\n\n-   `geom_area()`\n\n:::\n::::\n\n## Other components {.smaller}\n\n- Scales เมื่อตัวแปรถูกแปลงให้มาอยู่บน attribute ของทัศนภาพข้อมูลผ่าน aesthetic mapping แล้ว ขอบเขตหรือช่วงที่เป็นไปได้ของความผันแปรของ visual element ต่าง ๆ บนทัศนภาพจะเรียกว่า scale การปรับแต่ง scale ของแผนภาพให้ตรงกับความต้องการของผู้วิเคราะห์สามารถทำได้ผ่านฟังก์ชัน `scale_XXX_YYY()` โดยที่ XXX คือชื่อของ aesthetic และ YYY คือชื่อของ scale ที่ต้องการปรับแต่ง เช่น `scale_x_continuous()` หรือ `scale_color_manual()`\n\n- Theme เป็นการปรับแต่งคุณลักษณะต่าง ๆ ของทัศนภาพข้อมูล เช่น สีพื้นหลัง สีของกรอบแกน สีของตัวอักษร และอื่น ๆ ผ่านฟังก์ชัน `theme()`\n\n# กิจกรรม : My First Scatter plot\n\n1. ติดตั้ง library-`gapminder` และ `ggplot2` \n\n2. นำเข้าข้อมูล `gapminder` โดยพิมพ์คำสั่ง `library(gapminder)` และ `gapminder`\n\n3. ลองสำรวจข้อมูลเบื้องต้น ชุดข้อมูล `gapminder` มีตัวแปรกี่ตัว และมีข้อมูลกี่แถว\n\n4. ขั้นตอนต่อไปนี้จะเริ่มสร้าง scatter plot ด้วย ggplot2\n\n  - พิมพ์คำสั่ง `ggplot(data = gapminder)` ผลลัพธ์ที่ได้เป็นอย่างไร\n  \n  - เพิ่ม aesthetic mapping โดยพิมพ์คำสั่ง `ggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp))` ผลลัพธ์ที่ได้เป็นอย่างไร\n\n  - เพิ่ม geometric object โดยพิมพ์คำสั่ง \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder, aes(x = gdpPercap, y = lifeExp)) + \n  geom_point()\n```\n:::\n\n\n\n# กิจกรรม : Creating any plots with ggplot2\n\n1. จำนวนประเทศจำแนกตามทวีปเป็นอย่างไร ในปี 2007\n\n2. การแจกแจงของ lifeExp กับ gdpPercap ในปี 2007 มีลักษณะเหมือนหรือแตกต่างกันอย่างไร\n\n  \n3. การแจกแจงของอายุขัยเฉลี่ยของประชากรในปี 2007 ระหว่างประเทศที่มี gdpPercap มากกว่า 10000$ กับต่ำกว่า 10000$ เหมือนหรือแตกต่างกันอย่างไร\n\n4. อายุขัยเฉลี่ยของประชากรในทวีปเอเซียมีแนวโน้มเปลี่ยนแปลงอย่างไรในช่วงปี 1952-2007\n\n  - line plot\n  - boxplot\n  - heatmap\n\n5. เปรียบเทียบสัดส่วนประเทศที่มีค่า gdpPercap มากกว่า 10000$ กับต่ำกว่า 10000$ ในช่วงปี 1952 - 2007\n",
    "supporting": [
      "datvis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}