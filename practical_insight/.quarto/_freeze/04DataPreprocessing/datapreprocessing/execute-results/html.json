{
  "hash": "5999ac7b780f0f2b77991f5d4389efc4",
  "result": {
    "markdown": "---\ntitle: \"4. Data Preprocessing\"\nsubtitle: \"<b>Practical Insight: Doing Data Science in Education with R</b>\"\nauthor: ผศ.ดร.สิวะโชติ ศรีสุทธิยากร\nlogo: \"images/logo.png\"\nfooter: \"[Practical Insight: Doing Data Science in Education with R](https://datakruroo.netlify.app/practical_insight/_site/)\"\nformat: \n  revealjs: \n    theme: slides.scss\n    multiplex: true\n    transition: slide\n    slide-number: true\n    navigation-mode: vertical\n    scrollable: true\n    chalkboard: true\n    menu: \n      numbers: true\n    slide-tone: false\neditor: visual\nexecute:\n  freeze: auto\n---\n\n\n\n# Data Preprocessing\n\nเป็นกระบวนการที่มีวัตถุประสงค์หลักคือเพื่อจัดกระทำหรือแปลงข้อมูลดิบที่เก็บรวบรวมมาจากแหล่งข้อมูลต่าง ๆ ให้อยู่ในรูปแบบที่พร้อมและมีคุณภาพเพียงพอสำหรับการนำไปวิเคราะห์ \n\n- Exploring Data\n- Cleaning Data\n- Manipulating Data\n- Data Reduction\n\n\n## Data Preprocessing\n\n![ที่มา : Max Khun, & Kjell Johnson (2019)](images/image-27453011.png)\n\n\n# กิจกรรม : Messy Data (Revisited)\n\nจากชุดข้อมูล messydata.xlsx ขอให้ผู้เรียน\n\n-   ทดลองใช้ฟังก์ชันพื้นฐานข้างต้น สำรวจชุดข้อมูลผลลัพธ์ที่ได้เป็นอย่างไร\n\n-   ชุดข้อมูลที่นำเข้าจาก messydata.xlsx มีคุณสมบัติ tidy data หรือไม่ อย่างไร\n\n-   ผู้เรียนคิดว่า tidy data ของชุดข้อมูล messydata.xlsx ควรมีหน้าตาเป็นอย่างไร\n\n## Messy Data (Revisited) {.smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nmessy_dat <- read_excel(\"dataset/messydata.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nmessy_dat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 5\n   ...1            Lecture.pre PBL.pre Lecture.post PBL.post\n   <chr>           <chr>       <chr>   <chr>        <chr>   \n 1 Ancient One     20          -       45           -       \n 2 Adam Warlock    16          -       34           -       \n 3 Captain America -           18      -            67      \n 4 Colossus        -           25      -            93      \n 5 Captain Marvel  13          -       50           -       \n 6 Diablo          -           17      <NA>         71      \n 7 Doctor Doom     14          -       48           -       \n 8 Deadpool        -           20      -            83      \n 9 Dr. Strange     -           28      -            75      \n10 Exodus          -           21      -            73      \n11 Falcon          22          -       32           -       \n12 Groot           -           17      -            68      \n13 Hitman          14          -       70           -       \n14 Hulk            15          -       64           -       \n15 Iceman          19          -       55           -       \n16 Iron Man        -           15      -            82      \n17 Jimmy Woo       18          -       59           -       \n18 Kingpin         -           12      -            68      \n19 Kronos          8           -       62           -       \n20 Logan           -           25      -            87      \n```\n:::\n:::\n\n\n\n\n# Tidying Data {.smaller}\n\nเป็นกระบวนการปรับแต่งโครงสร้างของข้อมูลให้เป็นรูปแบบที่เหมาะสมกับการวิเคราะห์ โดยใช้เครื่องมือต่าง ๆ ในการจัดการกับข้อมูล ซึ่งสามารถแบ่งออกเป็น 3 ขั้นส่วนหลักได้แก่\n\n- การจัดการกับตาราง (Table)\n\n- การจัดการกับคอลัมน์ (Column)\n\n- การจัดการกับแถว (Row)\n\n\n## [`Tidyr`]() package {.smaller}\n\n![](https://tidyr.tidyverse.org/logo.png){width=\"20%\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyr\")\nlibrary(tidyr)\n```\n:::\n\n\n\n\n\n## การจัดการกับคอลัมน์ (Column) {.smaller}\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"dplyr\")\nlibrary(dplyr)\n```\n:::\n\n\n\n- `head()` และ `tail()` - ใช้เรียกดูตารางข้อมูลส่วนหัว และส่วนท้าย\n\n- `glimpse()` ใช้สำรวจโครงสร้างโดยรวมของชุดข้อมูล\n\n- `select()` ใช้เลือกคอลัมน์ที่ต้องการ\n\n- `rename()` ใช้เปลี่ยนชื่อคอลัมน์\n\n- `mutate()` ใช้สร้างคอลัมน์ใหม่ที่คำนวณจากคอลัมน์ที่มีอยู่แล้ว\n\n- `arrange()` ใช้เรียงลำดับข้อมูลตามคอลัมน์ที่กำหนด\n\n- `summarise()` ใช้สรุปข้อมูลตามคอลัมน์ที่กำหนด\n\n\n\n## การจัดการกับแถว (Row) {.smaller}\n\n- `filter()` ใช้กรองข้อมูลตามเงื่อนไขที่กำหนด\n\n- `slice()` ใช้เลือกแถวตามลำดับที่กำหนด\n\n- `distinct()` ใช้เลือกแถวที่ไม่ซ้ำกัน\n\n\n## การจัดการกับตาราง (Table) {.smaller}\n\n#### [`tidyr`](https://raw.githubusercontent.com/rstudio/cheatsheets/main/tidyr.pdf)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyr\")\nlibrary(tidyr)\n```\n:::\n\n\n\n- `gather()` ใช้แปลงชุดข้อมูลให้อยู่ในรูปแบบ long format\n\n- `spread()` ใช้แปลงชุดข้อมูลให้อยู่ในรูปแบบ wide format\n\n\n\n\n\n\n## ฟังก์ชันพื้นฐานใน R สำหรับสำรวจข้อมูล\n\n-   `str()` - ใช้สำรวจโครงสร้างโดยรวมของชุดข้อมูล\n\n-   `head()` และ `tail()` - ใช้เรียกดูตารางข้อมูลส่วนหัว และส่วนท้าย\n\n-   `names()` - ใช้เรียกดูชื่อคอลัมน์ในชุดข้อมูล และยังสามารถใช้เปลี่ยนชื่อคอลัมน์ได้ด้วย\n\n-   `summary()` - เรียกดูค่าสถิติเบื้องต้นของตัวแปรแต่ละตัวภายในชุดข้อมูล\n\n\n\n",
    "supporting": [
      "datapreprocessing_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}