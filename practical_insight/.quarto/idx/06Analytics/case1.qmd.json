{"title":"Analytics Example 1","markdown":{"yaml":{"title":"Analytics Example 1","subtitle":"<b>Practical Insight: Doing Data Science in Education with R</b>","author":"ผศ.ดร.สิวะโชติ ศรีสุทธิยากร","logo":"images/logo.png","footer":"[Practical Insight: Doing Data Science in Education with R](https://datakruroo.netlify.app/practical_insight/_site/)","format":{"html":{"number_sections":true}},"editor":"visual","execute":{"freeze":"auto"}},"headingText":"Types of Data Analytics","containsRefs":false,"markdown":"\n\n\n<center>![](images/analytictypes.png){width=\"80%\"}</center>\n\n\n## สถานการณ์\n\nนักวิเคราะห์ต้องการทำนายเงินเดือนของอาจารย์มหาวิทยาลัย ด้วยตัวแปรทำนายได้แก่ เพศ ตำแหน่งทางวิชาการ สาขาวิชา ประสบการณ์ในการเป็นอาจารย์ และประสบการณ์ทำงานตั้งแต่จบปริญญาเอก โดยตัวแปรตามคือเงินเดือนของอาจารย์มหาวิทยาลัยที่ต้องการวิเคราะห์เป็นตัวแปรจัดประเภทที่มี 2 กลุ่ม กลุ่มแรกเป็นอาจารย์รายได้สูง (ตั้งแต่ 90,000 บาทขึ้นไป) และกลุ่มอาจารย์รายได้ปกติ\n\n```{r message =F}\nlibrary(readr)\nlibrary(dplyr)\ndat <- read_csv(\"TeacherSalaryData.csv\")\nglimpse(dat, 60)\n```\n\n```{r}\n## สร้างตัวแปรรายได้แบบจัดประเภท\ndat |> \n  mutate(high_salary = ifelse(salary >= 90000, \"high\", \"normal\"))-> dat_new\n```\n\n## มโนทัศน์ของการพัฒนาโมเดลทำนาย\n\nเราต้องการโมเดลทำนายที่มีคุณสมบัตื\n\n- Unbiased\n\n- Minimum variance\n\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-1638148101.png)\n\n\n## กระบวนการพัฒนาโมเดลทำนาย\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-1728379488.png)\n\n## Resampling \n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-468626522.png)\n\n- K-fold cross-validation\n\n- Bootstraping\n\n## K-fold cross-validation\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-1150746472.png)\n\n\n## Tidymodels Framework\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-258190158.png)\n\n\n- package-rsample ใช้ในงาน resampling ข้อมูล เช่นการสร้าง training/validation/test dataset การสร้าง cross-validation dataset หรือการสร้าง bootstrape dataset ซึ่งได้กล่าวการใช้งานเบื้องต้นไปแล้ว\n\n- package-recipes ใช้แปลง/แก้ปัญหาที่เกิดขึ้นในข้อมูลของตัวแปรที่ใช้ในการพัฒนาโมเดล ขั้นตอนนี้เรียกว่า feature engineering\n\n- package-parsnip ใช้ fit machine learning กับข้อมูล\n\n- package-Tune และ package-dials มีฟังก์ชันที่อำนวยความสะดวกในการ fine tune hyperparameter ของโมเดลเพื่อเพิ่มประสิทธิภาพการทำนายของโมเดลให้สูงที่สุด\n\n- package-yardstick มีฟังก์ชันของ metric ที่ใช้ประเมินประสิทธิภาพของโมเดลทำนาย\n\ntidymodels ถูกพัฒนาขึ้นโดยได้รับการออกแบบให้สามารถทำซ้ำกระบวนการพัฒนาโมเดลได้ง่าย โดยใช้ไวยกรณ์ของภาษาในลักษณะเดียวกัน และถูกออกแบบโดยเน้นใช้กับ supervised learning เป็นหลัก ผู้ใช้งานไม่จำเป็นต้องติดตั้งทุก package ในข้างต้นด้วยตนเอง แต่ติดตั้งเพียง package-tidymodels ก็สามารถใช้งานทุก package ภายใต้ framework ดังกล่าวได้แล้ว โดยการพิมพ์คำสั่งต่อไปนี้\n\n```{r message = F}\n#install.packages(\"tidymodels\")\nlibrary(tidymodels)\n```\n\n\n### แบ่งชุดข้อมูลออกเป็น training และ test set\n\n```{r}\nset.seed(123)\nsplit <- initial_split(dat_new, prop = 0.8)\ntrain <- training(split)\ntest <- testing(split)\n```\n\n\n\n### การสำรวจข้อมูล 1\n\n```{r}\n#install.packages(\"DataExplorer\")\nlibrary(DataExplorer)\nplot_intro(train)\nplot_missing(train)\nplot_bar(train)\nplot_histogram(train)\nplot_correlation(train, maxcat = 3)\n```\n\n### สำรวจข้อมูล 2\n\n```{r}\nlibrary(ggplot2)\ntrain |>\n  ggplot(aes(x = high_salary, y = yrs.since.phd, fill = sex))+\n  geom_boxplot()\n\ntrain %>%\n  group_by(rank, discipline) |> \n  count(high_salary) |> \n  ggplot(aes(x=rank, y=n, fill=high_salary))+\n  geom_col()+\n  facet_wrap(~discipline, ncol=2)\n```\n\n\n### Data Preprocessing\n\n```{r}\n## Preprocessing1 \nrecipe1_nointerc <- recipe(high_salary ~., data=train) |> \n  step_select(-salary, -...1) |>\n  step_mutate(rank = factor(rank, levels=c(\"AsstProf\", \"AssocProf\", \"Prof\"))) |> \n  step_normalize(all_numeric_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  prep(data = train)\n\n## Preprocessing2\nrecipe2_withinterc <- recipe(high_salary ~., data=train) |> \n  step_select(-salary, -...1) |>\n  step_mutate(rank = factor(rank, levels=c(\"AsstProf\", \"AssocProf\", \"Prof\"))) |> \n  step_interact(terms = ~rank:discipline) |>\n  step_normalize(all_numeric_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  prep(data = train) \n\n```\n\n### Fitting Model using parsnip\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-538379331.png){width=\"30%\"}\nการ fit machine learning model กับข้อมูลด้วย R ในยุคเริ่มแรกค่อนข้างมีความยากลำบากพอสมควร เพราะ R ไม่ได้มี package ที่เป็น framework รวมสำหรับการ fit ML model ดังกล่าว การที่จะ fit ML model ในงานหนึ่ง ๆ ผู้วิเคราะห์อาจจะต้องยุ่งเกี่ยวกับ package จำนวนมาก เช่น\n\n- package rpart สำหรับ fit decision tree\n\n- package glmnet สำหรับ fit regularized regression model\n\n- package knn สำหรับ fit K-NN model\n\nparsnip ถูกพัฒนาขึ้นเพื่อแก้ปัญหาดังกล่าว โดยมีวัตถุประสงค์เพื่อให้ผู้วิเคราะห์สามารถ fit ML model ได้โดยใช้ไวยากรณ์เดียวกัน และไม่จำเป็นต้องรู้ถึงวิธีการทำงานของแต่ละ model ที่จะใช้ โดยในปัจจุบัน parsnip สามารถใช้ได้กับ model ที่มีอยู่ใน tidymodels ได้แก่\n\n[https://www.tidymodels.org/find/parsnip/](https://www.tidymodels.org/find/parsnip/)\n\nจากสถานการณ์ข้างต้นหากจะใช้ logistic regression เพื่อเป็นโมเดลทำนาย สามารถระบุโมเดลได้ดังนี้\n\n```{r}\nlogistic_model <- logistic_reg() |> \n  set_engine(\"glm\") |> \n  set_mode(\"classification\")\n```\n\n### สร้าง workflowset เพื่อ fit model ข้างต้น และประเมินผล\n\n```{r}\n## สร้าง workflowset\nmy_workflowset <- workflow_set(\n  preproc = list(recipe1_nointerc, recipe2_withinterc),\n  models = list(logistic_model)\n)\nmy_workflowset\n```\n\n```{r}\n## กำหนด evaluation metric\neval_metric <- metric_set(roc_auc, accuracy, sens, spec, f_meas)\ntrain_result <- my_workflowset |> \n  workflow_map(\n    resamples = vfold_cv(train, v = 5),\n    metrics = eval_metric\n  )\n```\n\n\n### ดูผลลัพธ์จากการประเมิน\n\nผลลัพธ์ด้านล่างแสดงให้เห็นว่าโมเดลแรกให้ผลดีที่สุด\n\n```{r}\n# พิจารณา validation performance\ntrain_result |> \n  rank_results()\n\ntrain_result |> \n  collect_metrics() |> \n  filter(.metric == \"roc_auc\") |> \n  arrange(desc(mean))\n\n```\n\nเลิือก best workflow จากผลลัพธ์ด้านบน\n\n```{r}\nbest_workflow <- train_result |> \n  extract_workflow(id = \"recipe_1_logistic_reg\") |> \n  fit(train)\n\ntest_rec <- recipe1_nointerc |> \n  bake(new_data = test)\n\nlibrary(caret)\ntest_pred <- best_workflow |> \n  extract_fit_parsnip() |>\n  predict(test_rec) |> \n  bind_cols(test) |> \n  mutate(high_salary = factor(high_salary, levels=c(\"high\",\"normal\"))) \n\nconfusionMatrix(test_pred$.pred_class, test_pred$high_salary, positive = \"high\")\n```\n\nลองนำโมเดลที่ได้มาทำนาย salary ใน test set\n\n```{r eval = F}\ntrained_logistic1 <- train_result |>\n  extract_workflow(id = \"recipe_1_logistic_reg\") |> \n  select_best(metric = \"roc_auc\")\n\ntrained_logistic2 <- train_result |>\n  extract_workflow_set_result(id = \"recipe_2_logistic_reg\")\n\ntrained_logistic1 |> \n  finalize_workflow() |>\n  last_fit(split = split) -> logistic1_fit\n\npredict(trained_logistic1, test) |> \n  bind_cols(test) |> \n  select(high_salary, .pred_class, .pred_0, .pred_1)\n)\n```\n\n### การสรุปผลการวิเคราะห์ข้อมูล\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n## Types of Data Analytics\n\n<center>![](images/analytictypes.png){width=\"80%\"}</center>\n\n\n## สถานการณ์\n\nนักวิเคราะห์ต้องการทำนายเงินเดือนของอาจารย์มหาวิทยาลัย ด้วยตัวแปรทำนายได้แก่ เพศ ตำแหน่งทางวิชาการ สาขาวิชา ประสบการณ์ในการเป็นอาจารย์ และประสบการณ์ทำงานตั้งแต่จบปริญญาเอก โดยตัวแปรตามคือเงินเดือนของอาจารย์มหาวิทยาลัยที่ต้องการวิเคราะห์เป็นตัวแปรจัดประเภทที่มี 2 กลุ่ม กลุ่มแรกเป็นอาจารย์รายได้สูง (ตั้งแต่ 90,000 บาทขึ้นไป) และกลุ่มอาจารย์รายได้ปกติ\n\n```{r message =F}\nlibrary(readr)\nlibrary(dplyr)\ndat <- read_csv(\"TeacherSalaryData.csv\")\nglimpse(dat, 60)\n```\n\n```{r}\n## สร้างตัวแปรรายได้แบบจัดประเภท\ndat |> \n  mutate(high_salary = ifelse(salary >= 90000, \"high\", \"normal\"))-> dat_new\n```\n\n## มโนทัศน์ของการพัฒนาโมเดลทำนาย\n\nเราต้องการโมเดลทำนายที่มีคุณสมบัตื\n\n- Unbiased\n\n- Minimum variance\n\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-1638148101.png)\n\n\n## กระบวนการพัฒนาโมเดลทำนาย\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-1728379488.png)\n\n## Resampling \n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-468626522.png)\n\n- K-fold cross-validation\n\n- Bootstraping\n\n## K-fold cross-validation\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-1150746472.png)\n\n\n## Tidymodels Framework\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-258190158.png)\n\n\n- package-rsample ใช้ในงาน resampling ข้อมูล เช่นการสร้าง training/validation/test dataset การสร้าง cross-validation dataset หรือการสร้าง bootstrape dataset ซึ่งได้กล่าวการใช้งานเบื้องต้นไปแล้ว\n\n- package-recipes ใช้แปลง/แก้ปัญหาที่เกิดขึ้นในข้อมูลของตัวแปรที่ใช้ในการพัฒนาโมเดล ขั้นตอนนี้เรียกว่า feature engineering\n\n- package-parsnip ใช้ fit machine learning กับข้อมูล\n\n- package-Tune และ package-dials มีฟังก์ชันที่อำนวยความสะดวกในการ fine tune hyperparameter ของโมเดลเพื่อเพิ่มประสิทธิภาพการทำนายของโมเดลให้สูงที่สุด\n\n- package-yardstick มีฟังก์ชันของ metric ที่ใช้ประเมินประสิทธิภาพของโมเดลทำนาย\n\ntidymodels ถูกพัฒนาขึ้นโดยได้รับการออกแบบให้สามารถทำซ้ำกระบวนการพัฒนาโมเดลได้ง่าย โดยใช้ไวยกรณ์ของภาษาในลักษณะเดียวกัน และถูกออกแบบโดยเน้นใช้กับ supervised learning เป็นหลัก ผู้ใช้งานไม่จำเป็นต้องติดตั้งทุก package ในข้างต้นด้วยตนเอง แต่ติดตั้งเพียง package-tidymodels ก็สามารถใช้งานทุก package ภายใต้ framework ดังกล่าวได้แล้ว โดยการพิมพ์คำสั่งต่อไปนี้\n\n```{r message = F}\n#install.packages(\"tidymodels\")\nlibrary(tidymodels)\n```\n\n\n### แบ่งชุดข้อมูลออกเป็น training และ test set\n\n```{r}\nset.seed(123)\nsplit <- initial_split(dat_new, prop = 0.8)\ntrain <- training(split)\ntest <- testing(split)\n```\n\n\n\n### การสำรวจข้อมูล 1\n\n```{r}\n#install.packages(\"DataExplorer\")\nlibrary(DataExplorer)\nplot_intro(train)\nplot_missing(train)\nplot_bar(train)\nplot_histogram(train)\nplot_correlation(train, maxcat = 3)\n```\n\n### สำรวจข้อมูล 2\n\n```{r}\nlibrary(ggplot2)\ntrain |>\n  ggplot(aes(x = high_salary, y = yrs.since.phd, fill = sex))+\n  geom_boxplot()\n\ntrain %>%\n  group_by(rank, discipline) |> \n  count(high_salary) |> \n  ggplot(aes(x=rank, y=n, fill=high_salary))+\n  geom_col()+\n  facet_wrap(~discipline, ncol=2)\n```\n\n\n### Data Preprocessing\n\n```{r}\n## Preprocessing1 \nrecipe1_nointerc <- recipe(high_salary ~., data=train) |> \n  step_select(-salary, -...1) |>\n  step_mutate(rank = factor(rank, levels=c(\"AsstProf\", \"AssocProf\", \"Prof\"))) |> \n  step_normalize(all_numeric_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  prep(data = train)\n\n## Preprocessing2\nrecipe2_withinterc <- recipe(high_salary ~., data=train) |> \n  step_select(-salary, -...1) |>\n  step_mutate(rank = factor(rank, levels=c(\"AsstProf\", \"AssocProf\", \"Prof\"))) |> \n  step_interact(terms = ~rank:discipline) |>\n  step_normalize(all_numeric_predictors()) |> \n  step_dummy(all_nominal_predictors()) |> \n  prep(data = train) \n\n```\n\n### Fitting Model using parsnip\n\n![](https://datakruroo.netlify.app/mlcourse/_site/documents/images/image-538379331.png){width=\"30%\"}\nการ fit machine learning model กับข้อมูลด้วย R ในยุคเริ่มแรกค่อนข้างมีความยากลำบากพอสมควร เพราะ R ไม่ได้มี package ที่เป็น framework รวมสำหรับการ fit ML model ดังกล่าว การที่จะ fit ML model ในงานหนึ่ง ๆ ผู้วิเคราะห์อาจจะต้องยุ่งเกี่ยวกับ package จำนวนมาก เช่น\n\n- package rpart สำหรับ fit decision tree\n\n- package glmnet สำหรับ fit regularized regression model\n\n- package knn สำหรับ fit K-NN model\n\nparsnip ถูกพัฒนาขึ้นเพื่อแก้ปัญหาดังกล่าว โดยมีวัตถุประสงค์เพื่อให้ผู้วิเคราะห์สามารถ fit ML model ได้โดยใช้ไวยากรณ์เดียวกัน และไม่จำเป็นต้องรู้ถึงวิธีการทำงานของแต่ละ model ที่จะใช้ โดยในปัจจุบัน parsnip สามารถใช้ได้กับ model ที่มีอยู่ใน tidymodels ได้แก่\n\n[https://www.tidymodels.org/find/parsnip/](https://www.tidymodels.org/find/parsnip/)\n\nจากสถานการณ์ข้างต้นหากจะใช้ logistic regression เพื่อเป็นโมเดลทำนาย สามารถระบุโมเดลได้ดังนี้\n\n```{r}\nlogistic_model <- logistic_reg() |> \n  set_engine(\"glm\") |> \n  set_mode(\"classification\")\n```\n\n### สร้าง workflowset เพื่อ fit model ข้างต้น และประเมินผล\n\n```{r}\n## สร้าง workflowset\nmy_workflowset <- workflow_set(\n  preproc = list(recipe1_nointerc, recipe2_withinterc),\n  models = list(logistic_model)\n)\nmy_workflowset\n```\n\n```{r}\n## กำหนด evaluation metric\neval_metric <- metric_set(roc_auc, accuracy, sens, spec, f_meas)\ntrain_result <- my_workflowset |> \n  workflow_map(\n    resamples = vfold_cv(train, v = 5),\n    metrics = eval_metric\n  )\n```\n\n\n### ดูผลลัพธ์จากการประเมิน\n\nผลลัพธ์ด้านล่างแสดงให้เห็นว่าโมเดลแรกให้ผลดีที่สุด\n\n```{r}\n# พิจารณา validation performance\ntrain_result |> \n  rank_results()\n\ntrain_result |> \n  collect_metrics() |> \n  filter(.metric == \"roc_auc\") |> \n  arrange(desc(mean))\n\n```\n\nเลิือก best workflow จากผลลัพธ์ด้านบน\n\n```{r}\nbest_workflow <- train_result |> \n  extract_workflow(id = \"recipe_1_logistic_reg\") |> \n  fit(train)\n\ntest_rec <- recipe1_nointerc |> \n  bake(new_data = test)\n\nlibrary(caret)\ntest_pred <- best_workflow |> \n  extract_fit_parsnip() |>\n  predict(test_rec) |> \n  bind_cols(test) |> \n  mutate(high_salary = factor(high_salary, levels=c(\"high\",\"normal\"))) \n\nconfusionMatrix(test_pred$.pred_class, test_pred$high_salary, positive = \"high\")\n```\n\nลองนำโมเดลที่ได้มาทำนาย salary ใน test set\n\n```{r eval = F}\ntrained_logistic1 <- train_result |>\n  extract_workflow(id = \"recipe_1_logistic_reg\") |> \n  select_best(metric = \"roc_auc\")\n\ntrained_logistic2 <- train_result |>\n  extract_workflow_set_result(id = \"recipe_2_logistic_reg\")\n\ntrained_logistic1 |> \n  finalize_workflow() |>\n  last_fit(split = split) -> logistic1_fit\n\npredict(trained_logistic1, test) |> \n  bind_cols(test) |> \n  select(high_salary, .pred_class, .pred_0, .pred_1)\n)\n```\n\n### การสรุปผลการวิเคราะห์ข้อมูล\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"case1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","urlcolor":"steelblue","linkcolor":"steelblue","theme":{"light":["pandoc","../theme.scss"]},"mainfont":"Sarabun","code-copy":true,"title":"Analytics Example 1","subtitle":"<b>Practical Insight: Doing Data Science in Education with R</b>","author":"ผศ.ดร.สิวะโชติ ศรีสุทธิยากร","logo":"images/logo.png","footer":"[Practical Insight: Doing Data Science in Education with R](https://datakruroo.netlify.app/practical_insight/_site/)","number_sections":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}