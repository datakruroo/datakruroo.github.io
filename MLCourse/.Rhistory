mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".",""))%>%
group_by(result3,word) %>%
count()
col<-ifelse(word_count[,1]==0,"maroon",
ifelse(word_count[,1]==1,"orange","steelblue"))
wordcloud2(data = word_count[,-1], size = 3, fontFamily = "ChulaCharasNew",
color = col, backgroundColor = "white",
shape = "square")
library(tidymodels)
library(tidymodels)
library(textrecipes)
all_data <- temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".",""))%>%
library(tidymodels)
all_data <- temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".",""))
head(all_data)
train <- training(split)
split <- initial_split(all_data, prop = 0.8, strata = result3)
train <- training(split)
test <- testing(split)
all_data <- temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".","")) %>%
mutate(result3 = factor(result3),
levels=c(0,1,2),
labels=c("ผิด","ถูกบางส่วน","ถูก"))
all_data <- temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".","")) %>%
mutate(result3 = factor(result3),
levels=c(0,1,2),
labels=c("ผิด","ถูกบางส่วน","ถูก"))
all_data <- temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".","")) %>%
mutate(result3 = factor(result3,
levels=c(0,1,2),
labels=c("ผิด","ถูกบางส่วน","ถูก")))
split <- initial_split(all_data, prop = 0.8, strata = result3)
train <- training(split)
test <- testing(split)
### create recipe objects
train_rec <- recipe(result3~word, data=train) %>%
step_tokenize(word) %>%
prep(NULL) %>%
juice()
glimpse(train_rec)
head(temp)
head(hw3)
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = map_chr(text3, ~paste(pythainlp$word_tokenize(.x), collapse = "|")))
temp
recipe_obj <- recipe(~ tokenized_text, data = data) %>%
step_tokenize(tokenized_text, token = "|") %>%
prep() %>%
juice()
recipe_obj <- recipe(~ tokenized_text, data = data) %>%
step_tokenize(temp, token = "|") %>%
prep() %>%
juice()
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token, token = "|") %>%
prep() %>%
juice()
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token, token = "|") %>%
prep(NULL) %>%
juice()
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = map_chr(text3, ~paste(pythainlp$word_tokenize(.x)))) %>%
unnest(token)
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = map_chr(text3, ~paste(pythainlp$word_tokenize(.x)))) %>%
unnest_tokens(token)
temp<-hw3 %>%
mutate(token = map_chr(text3, ~paste(pythainlp$word_tokenize(.x))))
head(hw3)
## tokenized via mutate function
temp<-hw3 %>%
mutate(tokens = map(text3, ~ pythainlp$word_tokenize(.x))) %>%
unnest_tokens(token)
## tokenized via mutate function
temp<-hw3 %>%
mutate(tokens = map(text3, ~ pythainlp$word_tokenize(.x)))
head(temp)
recipe_obj <- recipe(~ token, data = temp) %>%
prep(NULL) %>%
juice()
recipe_obj <- recipe(~ tokens, data = temp) %>%
prep(NULL) %>%
juice()
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = tokenize_thai(text3))
head(temp)
# Your dataset
data <- tibble(
id = 1:3,
text = c("สวัสดีครับ", "ผมชื่อแชทจีพีท", "ฉันชอบภาษาไทย")
)
# Tokenize text using PyThaiNLP's word_tokenize()
data <- data %>%
mutate(tokenized_text = map_chr(text, ~paste(pythainlp$word_tokenize(.x), collapse = "|")))
head(data)
# Create a recipe and use step_tokenize() with "|" as the delimiter
recipe_obj <- recipe(~ tokenized_text, data = data) %>%
step_tokenize(tokenized_text, custom_token  = "|")
# Prepare the recipe
recipe_obj_prepped <- recipe_obj %>%
prep()
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = tokenize_thai(text3))
head(temp)
temp$token
recipe_obj <- recipe(~ tokens, data = temp) %>%
step_tokenize(token) %>%
prep(NULL) %>%
juice()
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token) %>%
prep(NULL) %>%
juice()
recipe_obj
show_tokens(recipe_obj)
recipe(~ token, data = temp) %>%
step_tokenize(token) %>% show_tokens()
recipe(~ token, data = temp) %>%
step_tokenize(token) %>%
prep(NULL) %>%
juice()
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = tokenize_thai(text3)) %>%
mutate(token = str_replace_all(word, "\\d+", ""))
temp
temp[,3]
temp[,4]
temp[,4]%>%data.frame()
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = tokenize_thai(text3))
temp[,4]
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token) %>%
step_mutate(token, str_replace_all(word, "\\d+", "")) %>%
step_mutate()
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token) %>%
step_mutate(token, str_replace_all(word, "\\d+", "")) %>%  prep(NULL) %>%
juice()
recipe_obj
?step_tfidf
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = tokenize_thai(text3))
step_tokenize()
?step_tokenize
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = tokenize_thai(text3))
head(temp)
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token, token = "ptb") %>%
prep(NULL) %>%
juice()
recipe_obj
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token, token = "ptb") %>%
step_tfidf(token) %>%
prep(NULL) %>%
juice()
recipe_obj
recipe_obj
glimpse(recipe_obj)
?step_rm_tokenn
?step_rm_token
temp<-temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".",""))
temp
## tokenized via mutate function
temp<-hw3 %>%
mutate(token = tokenize_thai(text3))
glimpse(temp)
## tokenized via mutate function
temp<-hw3 %>%
mutate(word = tokenize_thai(text3))
temp<-temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".",""))
head(temp)
glimpse(temp)
temp$word %>% data.frame()
## tokenized via mutate function
temp<-hw3 %>%
mutate(word = tokenize_thai(text3)) %>%
temp %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".",""))
## tokenized via mutate function
temp<-hw3 %>%
mutate(word = tokenize_thai(text3)) %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".",""))
recipe_obj <- recipe(~ token, data = temp) %>%
step_tokenize(token, token = "ptb") %>%
step_tfidf(token) %>%
prep(NULL) %>%
juice()
head(temp)
recipe_obj <- recipe(~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
prep(NULL) %>%
juice()
glimpse(recipe_obj)
## tokenized via mutate function
temp<-hw3 %>%
mutate(word = tokenize_thai(text3)) %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".","")) %>%
filter(!word %in% py$stopword()) %>%
#filter(!word %in% py$negations()) %>%
filter(!word %in% py$syllables())
recipe_obj <- recipe(~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
prep(NULL) %>%
juice()
glimpse(recipe_obj)
tokenize_thai <- function(text) {
tokens <- lapply(text, pythainlp$word_tokenize, engine="newmm",
custom_dict = extended_dict)
tokens_list <- lapply(tokens, function(x) {
paste(x, collapse = " ")})
tokens_list <- unlist(tokens_list)
return(tokens_list)
}
## tokenized via mutate function
temp<-hw3 %>%
mutate(word = tokenize_thai(text3)) %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".","")) %>%
filter(!word %in% py$stopword()) %>%
#filter(!word %in% py$negations()) %>%
filter(!word %in% py$syllables())
glimpse(temp)
library(themis)
head*temp
## tokenized via mutate function
temp<-hw3 %>%
mutate(word = tokenize_thai(text3)) %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".","")) %>%
filter(!word %in% py$stopword()) %>%
#filter(!word %in% py$negations()) %>%
filter(!word %in% py$syllables()) %>%
mutate(result3 = factor(result3, levels=c(0,1,2),
labels=c("ผิด","ถูกบางส่วน","ถูก")))
###----
recipe_obj <- recipe(result3~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
step_smote()
###----
recipe_obj <- recipe(result3~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
step_smote() %>%
prep(NULL) %>%
juice()
table(recipe_obj$result3)
###----
recipe_obj <- recipe(result3~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
step_smote(result3) %>%
prep(NULL) %>%
juice()
###----
recipe_obj <- recipe(result3~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
step_adasyn(result3) %>%
prep(NULL) %>%
juice()
## tokenized via mutate function
temp<-hw3 %>%
mutate(word = tokenize_thai(text3)) %>%
# remove all numbers
mutate(word = str_replace_all(word, "\\d+", "")) %>%
# remove all english words
mutate(word = str_remove_all(word, "\\b(?!R2\\b|\\bR\\s?\\^\\s?2\\b)[A-Za-z]+\\b")) %>%
# correct word
mutate(word = str_replace(word, "อารีสแควร์","อาร์สแควร์"))%>%
#mutate(word = str_replace(word, "เหมาะสม","ความเหมาะสม")) %>%
#mutate(word = str_replace(word , "ถดถอย","สมการถดถอย")) %>%
# remove punctuation
mutate(word = str_remove(word, "^[[:punct:]]+$")) %>%
mutate(word = str_remove(word," ")) %>%
# remove unnescessary words
filter(!word %in% c("มีค่า","ที่จะ","=","นำมา","^","เ","ใกล้เคียง","ยังมี","ยกกำลัง","ทำการ","ใชต้รวจ","ขอ้","ืองตน้","ดังนั้น","ว่าการ",
"บางประการ","ทั้งสอง")) %>%
filter(!word %in% c(".","")) %>%
filter(!word %in% py$stopword()) %>%
#filter(!word %in% py$negations()) %>%
filter(!word %in% py$syllables()) %>%
mutate(result3 = factor(result3, levels=c(0,1,2),
labels=c("ผิด","ถูก","ถูก")))
###----
recipe_obj <- recipe(result3~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
step_adasyn(result3) %>%
prep(NULL) %>%
juice()
table(recipe_obj$result3)
### --- model specification
lasso_spec <- multinom_reg(penalty = tune(),
mixture = 1) %>%
set_engine("glmnet") %>%
set_mode("classification")
wf<-workflow() %>%
add_recipe(recipe_obj) %>%
add_model(lasso_spec)
###----
recipe_obj <- recipe(result3~ word, data = temp) %>%
step_tokenize(word, token = "ptb") %>%
step_tfidf(word) %>%
step_adasyn(result3)
### --- model specification
lasso_spec <- multinom_reg(penalty = tune(),
mixture = 1) %>%
set_engine("glmnet") %>%
set_mode("classification")
wf<-workflow() %>%
add_recipe(recipe_obj) %>%
add_model(lasso_spec)
