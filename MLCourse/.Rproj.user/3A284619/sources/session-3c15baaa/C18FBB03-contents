BiocManager::install("EBImage")
library(EBImage)
img<-readImage("/Users/siwachoat/Desktop/Screenshot 2566-03-04 at 10.58.21.png")
img
colorMode(img) = Grayscale
display(img)
img_resize = resize(img, w=28, h=28)
img_resize
display(img_resize)
summary(img_resize)
img_neg = max(img_resize) - img_resize
display( img_neg )
summary(img_neg)
### --- 
dat <- imageData(img_neg)[,,1]
summary(dat)
temp<-data.frame(t(as.numeric((dat))))
names(temp)<-paste("pixel",0:783,sep="")
temp<-round(temp*256,0)
plot_digit(temp[1,],1)

predict_val <- rf_fit_final %>%
  extract_workflow() %>%
  predict(temp)


img2<-readImage("/Users/siwachoat/Desktop/Screenshot 2566-03-04 at 11.37.30.png")
colorMode(img2) = Grayscale
img_neg = max(img2) - img2
display(img_neg)
logo_label = bwlabel(img_neg)
display(logo_label)
install.packages("OpenImageR")
library(OpenImageR)

crop1<-cropImage(imageData(logo_label)[,,1], new_width = 28,
          new_height = 28)





table(logo_label)

display( colorLabels(logo_label) )

img_crop = img2
img_thresh = img_crop < .3
display(img_thresh)


img_comb = combine(
  img_resize,
  img_resize -200
)
display(img_comb, all = TRUE)
imageData(img)->dat




img_median = medianFilter(img, 1)
display(img)

display(img_comb, all=TRUE)

imageData(img)->dat
as.numeric(dat) == train[1,]
(dat)
matrix(t(dat), ncol = 1, byrow = TRUE) == train[1,]

data.frame(t(as.numeric(dat)))->temp

plot_digit(train,1)
plot_digit(train[1,],1)
