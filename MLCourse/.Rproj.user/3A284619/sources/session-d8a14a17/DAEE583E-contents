library(ggplot2)
library(dplyr)
set.seed(123)
x<-runif(1000,0,8)
y<-rnorm(1000, sin(x), 0.5) 
data <- data.frame(x,y)
data %>% ggplot()+
  geom_point(aes(x=x, y=y),col="steelblue", alpha=0.6)+
  theme_light()

## method 1
data<-data %>%
  mutate(x2 = x^2,
         x3 = x^3)
head(data)

fit<-lm(y~x+x2+x3, data=data)
summary(fit)
pred.poly<-predict(fit)
head(pred.poly)
data$pred3<-pred.poly
head(data)
data %>% ggplot(aes(x=x))+
  geom_point(aes(y=y),col="steelblue", alpha=0.6)+
  geom_line(aes(y=pred3),col="orange",linewidth=1.5)+
  theme_light()

## method 2
fit<-lm(y~x+I(x^2)+I(x^3), data=data)
summary(fit)
pred.poly<-predict(fit)
head(pred.poly)
data$pred3<-pred.poly
head(data)
data %>% ggplot(aes(x=x))+
  geom_point(aes(y=y),col="steelblue", alpha=0.6)+
  geom_line(aes(y=pred3),col="orange",linewidth=1.5)+
  theme_light()

data %>% ggplot(aes(x = x, y= x2))+
  geom_point()+
  geom_smooth(method="lm")
library(car)
vif(fit)


## method 3
data<-data %>% 
  mutate(x_c = x-mean(x),#centering
         x_c2 = x_c^2,
         x_c3 = x_c^3
         ) 

fit<-lm(y~x_c+x_c2+x_c3, data=data)
summary(fit)
vif(fit)

## method 4: orthoginal polynomial

fit<-lm(y~poly(x,3), data=data)
pred.poly<-predict(fit)
head(pred.poly)
data$pred_orthogonal<-pred.poly
head(data)
data %>% ggplot(aes(x=x))+
  geom_point(aes(y=y),col="steelblue", alpha=0.6)+
  geom_line(aes(y=pred3),col="orange",linewidth=1.5)+
  geom_line(aes(y=pred_orthogonal),col="maroon",linewidth=1.5)+
  theme_light()




lm(y~x+x^2+x^3, data= data)
