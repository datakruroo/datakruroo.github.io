# พื้นฐาน R

เมื่อผู้อ่านดาวน์โหลดและติดตั้งโปรแกรม R รวมทั้ง RStudio หรือ Positron แล้ว บทเรียนนี้จะกล่าวถึงการใช้ภาษาเบื้องต้น ได้แก่ การคำนวณทางคณิตศาสตร์พื้นฐาน ฟังก์ชัน มโนทัศน์เกี่ยวกับตัวแปรในภาษา R ประเภทของตัวแปรและการสร้างตัวแปร และการอ้างอิงค่าหรือสมาชิกภายในตัวแปรที่สร้างขึ้น ในการเรียนรู้และประมวลผลคำสั่งตามเนื้อหาในบทเรียนนี้ ผู้อ่านสามารถพิมพ์คำสั่งบนเอกสาร Script โดยหากใช้ RStudio ผู้อ่านสามารถเปิดเอกสาร Script ได้โดยคลิกที่แถบเมนูด้านบน File --> New File --> R Script สำหรับใน Positron ให้สร้างไฟล์เอกสาร .R โดยบนแถบเมนูให้คลิกที่ File --> New File --> R File R ดังรูป 2.1

![รูป 2.1 การเปิด R Script ใน Rstudio](img/02Rscript.png){width="100%"}

![2.2 การเปิด R Script ใน Positron](img/02.R_positron.png)





รายละเอียดมีดังนี้

## การคำนวณทางคณิตศาสตร์พื้นฐาน

ภาษา R มีฟังก์ชันพื้นฐานสำหรับการคำนวณทางคณิตศาสตร์จำนวนมาก เช่น การ
ดำเนินการพีชคณิตพื้นฐานได้แก่ การบวก (+) ลบ (-) คูณ (*) หาร (/) ยกกำลัง (^) และ รากที่
สอง (sqrt()) รวมทั้งการคำนวณผลลัพธ์จากฟังก์ชันอดิศัย (implicit function) ต่าง ๆ เช่น
ฟังก์ชันตรีโกณมิติ sin(), cos(), tan() ฟังก์ชันลอการิทึมธรรมชาติ log() ฟังก์ชันเอกซ์
โพเนนเซียล exp() และ วงเล็บ ( ) เป็นต้น ชุดคำสั่งด้านล่างแสดงตัวอย่างการดำเนินการทาง
คณิตศาสตร์ใน R ผู้อ่านลองพิมพ์คำสั่งดังกล่างลงในเครื่องคอมพิวเตอร์ของตนเอง จากนั้นสังเกต
ผลลัพธ์ที่ได้

```{r eval = F}
1+1; 3-2; 4*5; 10/2
3^3; sqrt(625); 81^(1/3)
5%%3; (3^3+5-1)
log(10); exp(5)
```


## ฟังก์ชัน (functions)

ในหัวข้อที่ผ่านมาจะเห็นว่ามีการใช้งานฟังก์ชันในโปรแกรม R ไปบางตัวทั้งฟังก์ชันทาง
คณิตศาสตร์ เช่น sqrt(), exp() และ log() และฟังก์ชันกราฟิกคือ hist() เป็นต้น ผู้
อ่านจะสังเกตว่าการใช้ฟังก์ชันดังกล่าวในการทำงานช่วยให้ผู้ใช้ลดขั้นตอนในการทำงานที่ไม่
จำเป็นไปได้ นอกจากนี้ยังช่วยให้ syntax ของผู้เขียนโปรแกรมสั้นลง ทำงานได้ไวขึ้นและมี
ประสิทธิภาพสูงขึ้น เช่นหากต้องการหาค่าสัมบูรณ์ของ -10 ในกรณีที่ไม่ได้ฟังก์ชันเข้ามาช่วยใน
การประมวลผล ผู้วิเคราะห์จำเป็นต้องเขียนอัลกอริทึมเพื่อหาค่าสัมบูรณ์เองโดยอาจใช้คำสั่ง IF,
ELSE เพื่อควบคุมเงื่อนไขการทำงานของ R ดังตัวอย่างคำสั่งด้านล่าง ซึ่งจะได้ผลลัพธ์เท่ากับ 10

```{r}
x<-(-10)
## เขียนกระบวนการเพื่อหา absolute ของ x
if(x<0){-(x)} else {x}
```


อย่างไรก็ตามเมื่อเปรียบเทียบกับการใช้ฟังก์ชันเข้ามาช่วยในการทำงาน โดยในกรณีนี้นำ
เอาฟังก์ชัน abs() เข้ามาช่วยคำนวณค่าสัมบูรณ์ ผู้อ่านจะเห็นว่าการเขียนคำสั่งลดลงเหลือเพียง
บรรทัดเดียวเท่านั้น ดังนี้

```{r}
abs(-10)
```