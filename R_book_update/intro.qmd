# แนะนำโปรแกรม R

เนื้อหาภายในบทเรียนนี้เหมาะสำหรับผู้ที่ยังไม่เคยมีพื้นฐานเกี่ยวกับโปรแกรม R มาก่อน
โดยจะแนะนำภาพรวมของภาษา R เริ่มตั้งแต่การดาวน์โหลดและติดตั้งโปรแกรม  สภาพแวดล้อมของโปรแกรม และแนะนำ IDE ที่เหมาะสำหรับการใช้ร่วมกับโปรแกรม R รายละเอียดมีดังนี้

## R คืออะไร?

R เป็นภาษาคอมพิวเตอร์ยุคใหม่ที่ถูกพัฒนาขึ้นให้มีความสามารถอย่างหลากหลาย มีประสิทธิภาพสูง และดีมากสำหรับใช้ในการทำงานทางด้านสถิติและวิทยาการข้อมูล
โปรแกรม R ได้รับการริเริ่มพัฒนาขึ้นโดยผู้พัฒนาที่เป็นนักสถิติสองท่าน ได้แก่ Ross Inhaka และ Robert Gentleman จาก University of Auckland ประเทศนิวซีแลนด์ โดยพัฒนา
ต่อยอดมาจากภาษา S และ S+ และได้ทำการเผยแพร่ให้บุคคลทั่วไปได้ใช้งานตั้งแต่ปี ค.ศ. 1993
ภายใต้สัญญาอนุญาตสาธารณะทั่วไปของกนู (GNU General Public License) โปรแกรม R จัดเป็นโปรแกรมประเภท open source ซึ่งมีลักษณะเป็นโปรแกรมที่เผยแพร่ให้บุคคลทั่วไปมีสิทธิใน
การเข้าใช้งาน และพัฒนาโปรแกรมอย่างอิสระตามความต้องการโดยไม่เสียค่าใช้จ่ายไม่ว่าจะ
เป็นการใช้งานทั่วไป การแก้ไขปรับปรุง หรือพัฒนาต่อยอดโปรแกรม (Maindonale and Bruan, 2010; Field, Mild and Field, 2012; Schumacker, 2012; Brundon and Comber, 2013)

โปรแกรม R สามารถทำงานได้บนแพลตฟอร์มที่หลากหลาย (multiple platform) โดยสามารถติดตั้งและทำงานบนระบบปฏิบัติการที่สำคัญได้ทุกระบบ ได้แก่ Windows, Mac OS, Linux, Unix รวมทั้ง Chrome OS จุดเด่นนี้ทำให้โปรแกรม R สามารถเข้าถึงผู้ใช้งานได้อย่างทั่วถึง

การที่ R เป็นโปรแกรม open source ยังเป็นปัจจัยสนับสนุนที่ทำให้เกิดชุมชนนักพัฒนาที่กว้างขวางและมี library จำนวนมากที่ถูกพัฒนาขึ้นอย่างรวดเร็ว ต่อเนื่อง ทำให้ R มีส่วนต่อขยายที่ครอบคลุมการดำเนินการทางด้านสถิติและวิทยาการข้อมูล รวมทั้งการวิจัยแทบทุกด้าน สามารถตอบสนองต่อความต้องการและมีการพัฒนาที่ทันต่อการเปลี่ยนแปลงอย่างรวดเร็วในวงการวิทยาการข้อมูล ทำให้ปัจจุบัน R เป็นเครื่องมือหลักตัวหนึ่งสำหรับนักสถิติ นักวิทยาการข้อมูล และนักวิจัยจากทั่วโลก สำหรับการทำงานวิจัยและการวิเคราะห์ข้อมูลสมัยใหม่ 

ผู้เขียนได้ลองวิเคราะห์และจัดกลุ่มสามารถหลักของโปรแกรม R พบว่า อาจจำแนกได้เป็น
5 ด้าน คือ การนำเข้าข้อมูล (importing data) การจัดระเบียบและจัดกระทำข้อมูล (tidying and
manipulating data) การคำนวณทางคณิตศาสตร์ (mathematical computations) การวิเคราะห์ข้อมูลและพัฒนาโมเดลทางสถิติ (data analysis and statistical modelling) ซึ่งครอบคลุมทั้งโมเดลสำหรับการวิเคราะห์เชิงวินิจฉัย การวิเคราะห์เชิงทำนาย และการนำเสนอ
ข้อมูลและการสร้างทัศนภาพข้อมูล (data presentation and data visualization) โดยเมื่อพิจารณาความสามารถในแต่ละด้านข้างต้น พบว่ามีจุดเด่นหลายประการ ดังนี

1. สามารถนำเข้าข้อมูลได้หลายประเภท ด้วยวิธีการที่หลากหลาย โดยสามารถดำเนินการได้
ทั้งการป้อนข้อมูลโดยตรง การนำเข้าจากไฟล์ข้อมูลประเภทต่าง ๆ ซึ่งครอบคลุมทุกประเภท
ของไฟล์ข้อมูล การนำเข้าข้อมูลจากฐานข้อมูล ไปจนถึงการดาวน์โหลดและเก็บเกี่ยวข้อมูล
จากเว็ปไซด์ (web scrapping)


2. เป็นโปรแกรมที่มีความสามารถสูงในการจัดระเบียบและจัดกระทำข้อมูล โดยมีเครื่องมือที่มี
ประสิทธิภาพสูงมากหลายตัวที่ช่วยจัดระเบียบตารางข้อมูลในอยู่ในรูปแบบที่เหมาะสมสำหรับการวิเคราะห์ข้อมูลในงานต่าง ๆ และช่วยจัดกระทำข้อมูล เช่น การแบ่งส่วนย่อยของชุดข้อมูล การแปลงรหัสหรือแปลงค่าของตัวแปร หรือการจัดลำดับของข้อมูลตามค่าของตัวแปรที่กำหนด เป็นต้น

3. โปรแกรม R มีฟังก์ชันสำเร็จรูปทั้งทางคณิตศาสตร์และสถิติจำนวนมากที่ถูกติดตั้งมาพร้อม
กับการติดตั้งโปรแกรมในครั้งแรก ซึ่งสามารถเรียกใช้เพื่อช่วยให้การดำเนินงานต่าง ๆ
สามารถทำได้โดยง่ายและมีประสิทธิภาพ และนอกจากนี้ยังมีฟังก์ชันสำเร็จรูปอีกจำนวน
มากจาก package เสริมต่าง ๆ บน CRAN server ที่ถูกพัฒนาขึ้นโดยนักวิชาการ หรือนัก
พัฒนาจากทั่วโลก โดยปัจจุบันมี package จำนวนมากกว่า 10,000 ตัว บน server ดัง
กล่าวที่ผู้ใช้สามารถดาวน์โหลดและติดตั้งมาใช้เพื่อเสริมความสามารถในการดำเนินงานของ
โปรแกรม คุณสมบัตินี้ทำให้การดำเนินงานทางด้านสถิติและวิทยาการข้อมูลด้วยโปรแกรม R สามารถดำเนินงานได้ยืดหยุ่นมาก สามารถปรับแต่งและเลือกวิธีการดำเนินงานให้มีความ
เหมาะสม ทันสมัย และมีประสิทธิภาพสูงที่สุด โดยมีข้อจำกัดในการดำเนินงานที่น้อย

4. สามารถเชื่อมต่อและทำงานร่วมกับโปรแกรมวิเคราะห์ข้อมูลเฉพาะทางอื่น ๆ ได้หลาย
โปรแกรม เช่น Mplus, MLWins, OpenBUGS, JAGS หรือ Stan ซึ่งช่วยให้สามารถใช้
ความสามารถของโปรแกรมดังกล่าวได้ และยกระดับความสามารถของโปรแกรม R ให้เทียบ
เท่าและในบางกรณีอาจเหนือกว่าการใช้โปรแกรมวิเคราะห์ข้อมูลดังกล่าวโดยตรง

5. มีความประสิทธิภาพสูงมากสำหรับการทำงานด้านกราฟิกหรือการสร้างทัศนภาพข้อมูล
(data visualization) โดยเป็นโปรแกรมที่มี pacakage หลายตัวที่ถูกพัฒนาขึ้นสำหรับสร้าง
ทัศนภาพข้อมูลโดยเฉพาะ เช่น graphics, ggplot2, lattice, boken, rmarkdown,
flexdashboard และ shiny ซึ่งช่วยให้ผู้ใช้สามารถสร้างทัศนภาพข้อมูลได้อย่างหลากหลาย
ทั้งในรูปแบบทัศนภาพข้อมูลเชิงสถิต (static data visualization) ทัศนภาพข้อมูลเชิงพลวัต
(dynamic data visualization) และทัศนภาพข้อมูลเชิงปฏิสัมพันธ์ (interactive data
visualization)

6. เป็นโปรแกรมภาษาที่ง่ายต่อการเรียนรู้และใช้งาน นอกจากนี้ยังมีชุมชนผู้ใช้โปรแกรม R และ
แหล่งการเรียนรู้ออนไลน์ที่สามารถให้คำตอบแก่ผู้ใช้ได้อย่างกว้างขวางและตรงประเด็น ดัง
นั้นผู้ใช้โปรแกรม R หรือผู้ที่ต้องการศึกษา R ที่ไม่ได้มีพื้นฐานการเขียนโปรแกรมมาก่อนจึง
สามารถเรียนรู้ภาษา R เป็นภาษาแรกได้โดยง่าย

## การดาวน์โหลดและการติดตั้ง R

R เป็นโปรแกรมที่ได้รับการพัฒนาและได้รับการปรับปรุงอย่างต่อเนื่อง
ในหนังสือเล่มนี้ใช้โปรแกรม R version 4.4.1 (Race of Your Life) สำหรับผู้อ่านที่ยังไม่มี
โปรแกรมสามารถดาวน์โหลดโปรแกรมได้จาก [http://www/r-project.org/](http://www/r-project.org/) โดยเมื่อเข้าสู่ website
ให้คลิ้กที่คำว่า “download R” เพื่อดาวน์โหลดซอฟต์แวร์จาก CRAN (Comprehensive R
Archive Network) โดยให้ดาวน์โหลดตัว base distribution ที่เหมาะสมกับระบบปฏิบัติการของ
ตนเองแล้วดำเนินการติดตั้งโปรแกรมตามขั้นตอนที่ตัวช่วยการติดตั้งแนะนำ

![รูป 1.1 : Website ของ R project](img/01_Rwebsite.png){width=80% fig-align="center"}

เมื่อติดตั้งโปรแกรมเสร็จสมบูรณ์ และดำเนินการเปิดโปรแกรม ผู้อ่านจะพบกับหน้าต่างที่เรียกว่า R Console ในรูป 1.2 หน้าต่างดังกล่าวมีหน้าที่ รับคำสั่ง/ข้อมูลเข้าสู่โปรแกรม ส่งผ่านคำสั่งดังกล่าวไปยังหน่วยประมวลผลของเครื่อง รายงานผลลัพธ์/สถานะการทำงานต่าง ๆ ให้กับผู้ใช้ การป้อนคำสั่งในหน้าต่าง Console สามารถทำได้โดยพิมพ์คำสั่งไว้
ที่บริเวณด้านหลังเครื่องหมาย > (เรียกว่าเครื่องหมาย prompt) โดยเมื่อพิมพ์คำสั่งเสร็จแล้วให้ผู้ใช้
กดปุ่ม Enter โปรแกรมจะทำการประมวลผล และแสดงผลลัพธ์ในบรรทัดถัดไป อย่างไรก็ตามการ
เขียนคำสั่งใน R console มีข้อจำกัดประการหนึ่งคือผู้ใช้สามารถเขียนคำสั่งและประมวลได้ทีละ
บรรทัด ผู้ใช้สามารถประมวลผลหลายคำสั่งภายในบรรทัดเดียวกันได้ โดยการใช้เครื่องหมาย
semicolon (;) คั่นระหว่างคำสั่ง เช่น 1+1; 2^2+3; 2*3+4 และเมื่อกด Enter จะได้ผลลัพธ์ของ
คำสั่งทั้งหมดในคราวเดียว

![รูป 1.2 : สภาพแวดล้อมของ R](img/01_Renvironment.png){width="80%"}


จากข้อจำกัดในการทำงานบนหน้าต่าง Console ข้างต้น จึงมีการพัฒนาหน้าต่าง Editor
ขึ้นเพื่อใช้สำหรับใช้เขียนชุดคำสั่งที่มีความซับซ้อนเข้าสู่โปรแกรม หน้าต่าง Editor ยอมให้ผู้ใช้
สามารถป้อนคำสั่งหรือข้อมูลได้หลายบรรทัด โดยยังไม่จำเป็นต้องสั่งประมวลผลในทันที สามารถ
เลือกประมวลผลคำสั่งทีละบรรทัด บางบรรทัด หรือทุกบรรทัดได้อย่างอิสระตามความต้องการ
นอกจากนี้คำสั่งที่เขียนในหน้าต่าง Editor ยังสามารถเก็บบันทึกไว้ในไฟล์นามสกุล .R (โดยทั่วไป
เรียกว่า script file) ซึ่งช่วยให้ผู้ใช้สามารถจัดระเบียบในการทำงานได้ สามารถสืบค้นย้อน
ประวัติการทำงานจากคำสั่งที่เขียนไว้ก่อนหน้าได้ นอกจากนี้ยังสามารถนำกลับมาใช้ซ้ำ แก้ไข หรือ
ดัดแปลงให้เหมาะสำหรับการทำงานอื่น ๆ ต่อไปได้อีกด้วย

หน้าต่าง Editor นี้ไม่ได้ปรากฏให้ผู้ใช้ใช้งานได้ทันทีเมื่อเปิดโปรแกรม ผู้ใช้จำเป็นต้อง
เรียกเปิดหน้าต่างดังกล่าวขึ้นมาใช้งานโดยคลิกเลือกที่เมนู File บนแถบเมนูด้านบน จากนั้นเลือก
New Script (สำหรับระบบปฏิบัติการ Windows) หรือเลือก New Document (สำหรับระบบ
ปฏิบัติการ Mac OS) โดยหากต้องการให้ R ประมวลคำสั่งในบรรทัดใด ให้ผู้ใช้คลิกเลือกคำสั่งหรือ
ทำ highlight คลุมบรรทัดของคำสั่งที่ต้องการประมวลผล จากนั้นกดปุ่ม Clt+R (สำหรับระบบ
ปฏิบัติการ Windows) หรือกดปุ่ม ⌘+Enter (สำหรับระบบปฏิบัติการ Mac OS)

หน้าต่างสุดท้ายเรียกว่าหน้าต่าง Graphics (สำหรับระบบปฏิบัติการ Mac OS เรียก
หน้าต่างนี้ว่า Quartz) เป็นหน้าต่างสำหรับแสดงผลลัพธ์เชิงกราฟิกที่ประมวลผลได้จากโปรแกรม
ผู้ใช้จะพบกับหน้าต่างนี้เมื่อมีการเรียกใช้คำสั่งที่ให้ผลลัพธ์เชิงกราฟิก ดังตัวอย่างในรูป 1.2 ที่แสดง
การสร้าง histogram เพื่อสำรวจการแจกแจงของข้อมูลจำลองจากเลขสุ่มที่มีการแจกแจงแบบปกติ
มาตรฐานจำนวน 1000 ค่าโดยใช้ฟังก์ชัน `hist()`

## RStudio IDE

ปัจจุบันการทำงานในโครงการหรืองานวิจัยที่มีการใช้สถิติและวิทยาการข้อมูล ผู้วิเคราะห์จะต้องเกี่ยวข้องกับการใช้เครื่องมือและเทคนิคจำนวนมากและหลากหลาย ทำให้การทำงานภายใต้สภาพแวดล้องของ R โดยตรงอาจทำได้ยากโดยเฉพาะในกลุ่มผู้ใช้ที่ไม่ได้เชี่ยวชาญการเขียนโปรแกรม นอกจากนี้ยังอาจมีความยากในการบริหารจัดการไฟล์ข้อมูลและไฟล์ที่เกี่ยวข้องกับการดำเนินงาน 

จากความจำเป็นดังกล่าวจึงมีการพัฒนาโปรแกรมประเภท IDE (Integrated Development Environment) ขึ้นเพื่อให้ผู้ใช้ R มีเครื่องมือหรือตัวช่วยในการเขียนคำสั่งหรือพัฒนาโปรแกรมการวิเคราะห์ข้อมูลได้ง่ายและมีประสิทธิภาพมากขึ้น โดย Rstudio มีคุณสมบัติที่เป็นจุดเด่นดังนี้

1. RStudio มีสภาพแวดล้อมที่เป็นมิตรกับผู้ใช้มากขึ้น โดยมีการออกแบบส่วนตอบสนองกับผู้ใช้ที่มีการวางเครื่องมืออำนวยความสะดวกในการสั่งการทำงานของโปรแกรม R ทำให้การดำเนินการหลายส่วนสามารถทำได้โดยไม่จำเป็นต้องเขียนชุดคำสั่ง ซึ่งช่วยลดระยะเวลาการทำงานและทำให้ใช้งานภาษา R ได้ง่ายมากขึ้น เช่น การติดตั้งและเรียกใช้ library ต่าง ๆ การค้นหาไฟล์ข้อมูล การนำเข้าไฟล์ข้อมูล และ เรียกดูข้อมูลของตัวแปร

2. มีตัวแก้ไขคำสั่ง (Script Editor) ที่มีประสิทธิภาพสูงขึ้น โดยมีจุดเด่นที่เหนือกว่าการใช้ R Editor หลายประการ เช่น การเน้นสีของไวยกรณ์ภาษาทำให้การตรวจสอบแก้ไขคำสั่งสามารถทำได้ง่ายมากขึ้น การแนะนำคำสั่งที่เป็นไปได้ การแแจ้งเตือนและตรวจสอบข้อผิดพลาด นอกจากนี้ Editor ของ Rstudio ยังสามารถทำงานร่วมกับ Github Copilot ที่เป็น AI ที่ถูกฝึกสอนมาให้มีความสามารถในการช่วยสร้างคำสั่งซึ่งทำให้การทำงานด้านวิทยาการข้อมูลมีความสะดวกสบาย และมีประสิทธิภาพขึ้นอย่างมาก

3. การจัดการ workspace และไฟล์ที่เกี่ยวข้อง RStudio จะจัดการ workspace และไฟล์ทั้งหมดที่เกี่ยวข้องกับโปรเจคในโฟลเดอร์เดียว ทำให้การจัดการไฟล์มีความเป็นระบบ และลดความสับสนเมื่อทำงานกับหลายโปรเจค

4. การจัดการเวอร์ชัน (version control) RStudio รองรับการใช้งานร่วมกับ Git ภายในโปรเจค ทำให้สามารถควบคุมเวอร์ชันของโค้ดได้อย่างมีประสิทธิภาพ เช่น การ commit, push, pull, และดูประวัติการเปลี่ยนแปลงของโค้ดได้จากภายใน RStudio โดยตรง

5. RStudio รองรับการใช้งาน R Markdown และ Quarto ซึ่งเป็นเครื่องมือที่ช่วยให้ผู้ใช้สามารถสร้างเอกสารที่รวมโค้ด, ข้อความ, และผลลัพธ์ไว้ในไฟล์เดียวกัน สามารถสร้างรายงานแบบทำซ้ำได้ (reproducible report) ในรูปแบบต่าง ๆ เช่น เอกสารรายงาน/บทความ หนังสือ สไลด์นำเสนองาน และ เว็ปไซด์  

เมื่อเปิด RStudio ขึ้นมาผู้ใช้จะพบกับหน้าต่างหรือสภาพแวดล้อมดังรูป 1.3 ที่แบ่งออกเป็น 4 ส่วน ได้แก่ **(1) Source** เป็นส่วนสำหรับใช้เขียนคำสั่ง (scripts) เขียน markdown หรือเอกสาร quarto ซึ่งทำให้ผู้ใช้สามารถจัดการกับโค้ดได้อย่างเป็นระบบสามารถสั่งรันโค้ดบางส่วนหรือทั้งไฟล์ได้อย่างสะดวก ในทำนองเดียวกับ R Editor หากต้องการให้ R ประมวลคำสั่งในบรรทัดใด ให้ผู้ใช้คลิกเลือกคำสั่งหรือ ทำ highlight คลุมบรรทัดของคำสั่งที่ต้องการประมวลผล จากนั้นกดปุ่ม Clt+R (สำหรับระบบปฏิบัติการ Windows) หรือกดปุ่ม ⌘+Enter (สำหรับระบบปฏิบัติการ Mac OS) **(2) Console** เป็นส่วนที่แสดงผลลัพธ์จากการรันโค้ดหรือคำสั่งต่างๆ โดยผู้ใช้สามารถพิมพ์คำสั่งโดยตรงเพื่อให้รันทันทีได้ที่นี่ **(3) Environment/History** ในส่วนนี้จะแสดงข้อมูลของตัวแปรต่างๆ ที่ถูกสร้างขึ้นใน session ของการทำงาน รวมถึงประวัติของคำสั่งที่ถูกใช้ไปก่อนหน้านี้ ช่วยให้ผู้ใช้สามารถย้อนดูหรือเรียกใช้คำสั่งเดิมได้ง่าย และ **(4) Files/Plots/Packages/Help/Viewer** เป็นส่วนสำหรับการจัดการไฟล์ การดูกราฟหรือแผนภาพที่สร้างขึ้น การจัดการ package/library ที่ติดตั้ง การค้นหาความช่วยเหลือใน R และการแสดงผลข้อมูลที่เกี่ยวข้อง เช่น ไฟล์ HTML หรือไฟล์ภาพที่ถูกสร้างขึ้น

![รูป 1.3 สภาพแวดล้อมของ RStudio](img/01Rstudio.png)

ผู้ใช้สามารถเข้าไปดาวน์โหลด RStudio ได้ที่ [https://posit.co/download/rstudio-desktop/](https://posit.co/download/rstudio-desktop/) ทั้งนี้ก่อนการติดตั้ง RStudio ผู้ใช้จำเป็นจะต้องมีโปรแกรม R ตัวพื้นฐานติดตั้งอยู่ในเครื่องก่อนแล้ว 

## Positron IDE

Positron ได้การนิยามตัวเองว่าเป็น IDE สำหรับวงการวิทยาการข้อมูลที่รองรับการเขียนโปรแกรมหลากหลายภาษา ออกแบบมาเพื่อผู้ใช้ VS Code หรือ JupyterLab ที่ทำงานด้านวิทยาการข้อมูลด้วยภาษา Python หรือ R แต่ยังรู้สึกไม่พอใจกับฟีเจอร์หรือความสามารถในการปรับแต่งที่มีอยู่เดิม Positron เน้นการใช้งานหลักในภาษา Python และ R พร้อมความสามารถในการเพิ่มภาษาอื่น ๆ ผ่านส่วนขยาย (รองรับส่วนขยายของ VS Code) โครงการ Positron นี้พัฒนาในรูปแบบโอเพนซอร์สบน GitHub และยังคงพัฒนาโดยบริษัท Posit ควบคู่ไปกับ RStudio โดยไม่ได้ทิ้งซอฟต์แวร์เดิมเพื่อพัฒนาใหม่ทั้งหมด ขณะนี้ Positron อยู่ในช่วงเริ่มต้นของการพัฒนา โดยมีลักษณะการใช้งานคล้ายกับ VS Code ที่รองรับ Python และ R โดยไม่ต้องติดตั้งส่วนขยายเพิ่มเติม Posit มีแผนที่จะเพิ่มฟีเจอร์สำหรับงานวิทยาการข้อมูลเพิ่มเติมในอนาคต

สภาพแวดล้อมใน Positron มีโครงสร้างคล้ายกับ Rstudio และมีหน้าต่างย่อยสำหรับทำงานที่คล้ายคลึงกันรูป 1.4 แสดงสภาพแวดล้อมของ Positron 

![รูป 1.4 สภาพแวดล้อมของ Positron](img/01Positron.png)

ผู้ใช้สามารถดาวน์โหลด Positrion ได้ที่ [https://github.com/posit-dev/positron/releases](https://github.com/posit-dev/positron/releases) และสามารถติดต่อข่าวสารและรายละเอียดเกี่ยวกับ Positron ได้ที่ [https://github.com/posit-dev/positron?tab=readme-ov-file](https://github.com/posit-dev/positron?tab=readme-ov-file)

## ควรใช้ RStudio หรือ Positron

...


